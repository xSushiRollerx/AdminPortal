[{"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\index.js":"1","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\App.js":"2","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reportWebVitals.js":"3","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\RestaurantDataTable.js":"4","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FooterComponent.js":"5","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\RestaurantsComponents.js":"6","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\HeaderComponent.js":"7","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\UpdateRestaurant.js":"8","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateRestaurantComponent.js":"9","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FoodComponents.js":"10","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Account.js":"11","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UpdateAccount.js":"12","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Login.js":"13","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UserInfo.js":"14","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateFoodComponent.js":"15","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewRestaurantComponent.jsx":"16","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewFoodComponent.jsx":"17","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\Header.js":"18","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\AddRestaurantLink.js":"19","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\DataTable.js":"20","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useFullPageLoader.js":"21","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\ExternalInfo.js":"22","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\RestaurantService.js":"23","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\App.config.js":"24","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\FoodService.js":"25","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\UserService.js":"26","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\AuthenticationService.js":"27","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\layout.js":"28","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Header.js":"29","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Search.js":"30","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Pagination.js":"31","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\FullPageLoader.js":"32","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\withExternalInfo.js":"33","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useGAEventTracker.js":"34","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\PageHeader.js":"35","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\Popup.js":"36","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\useTable.js":"37","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\ConfirmDialog.js":"38","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\services\\employeeService.js":"39","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Controls.js":"40","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Notification.js":"41","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\input.js":"42","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\useForm.js":"43","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Checkbox.js":"44","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Select.js":"45","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\DatePicker.js":"46","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\RadioGroup.js":"47","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\ActionButton.js":"48","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Button.js":"49","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\Restaurants.js":"50","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\RestaurantForm.js":"51","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\FoodMenuForm.js":"52","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\GridSingleLine.js":"53","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\AlignList.js":"54"},{"size":565,"mtime":1621340582286,"results":"55","hashOfConfig":"56"},{"size":3256,"mtime":1622030533474,"results":"57","hashOfConfig":"56"},{"size":375,"mtime":1621340582298,"results":"58","hashOfConfig":"56"},{"size":7653,"mtime":1621349704102,"results":"59","hashOfConfig":"56"},{"size":467,"mtime":1621340582281,"results":"60","hashOfConfig":"56"},{"size":4398,"mtime":1621340582283,"results":"61","hashOfConfig":"56"},{"size":1560,"mtime":1621340582282,"results":"62","hashOfConfig":"56"},{"size":8596,"mtime":1621340582283,"results":"63","hashOfConfig":"56"},{"size":9671,"mtime":1621340952110,"results":"64","hashOfConfig":"56"},{"size":4045,"mtime":1621340582281,"results":"65","hashOfConfig":"56"},{"size":365,"mtime":1621340582276,"results":"66","hashOfConfig":"56"},{"size":6849,"mtime":1621340582277,"results":"67","hashOfConfig":"56"},{"size":2100,"mtime":1621340582276,"results":"68","hashOfConfig":"56"},{"size":2032,"mtime":1621340582278,"results":"69","hashOfConfig":"56"},{"size":8696,"mtime":1621340582279,"results":"70","hashOfConfig":"56"},{"size":2949,"mtime":1621340582284,"results":"71","hashOfConfig":"56"},{"size":2620,"mtime":1621340582284,"results":"72","hashOfConfig":"56"},{"size":834,"mtime":1621340582288,"results":"73","hashOfConfig":"56"},{"size":1915,"mtime":1621340952111,"results":"74","hashOfConfig":"56"},{"size":156,"mtime":1621340582289,"results":"75","hashOfConfig":"56"},{"size":396,"mtime":1621340582294,"results":"76","hashOfConfig":"56"},{"size":1560,"mtime":1621340582290,"results":"77","hashOfConfig":"56"},{"size":925,"mtime":1621434617783,"results":"78","hashOfConfig":"56"},{"size":5895,"mtime":1621340582293,"results":"79","hashOfConfig":"56"},{"size":606,"mtime":1621340582300,"results":"80","hashOfConfig":"56"},{"size":1117,"mtime":1621340582301,"results":"81","hashOfConfig":"56"},{"size":259,"mtime":1621340582299,"results":"82","hashOfConfig":"56"},{"size":603,"mtime":1621340582295,"results":"83","hashOfConfig":"56"},{"size":1364,"mtime":1621340582291,"results":"84","hashOfConfig":"56"},{"size":588,"mtime":1621340582292,"results":"85","hashOfConfig":"56"},{"size":1603,"mtime":1621340582291,"results":"86","hashOfConfig":"56"},{"size":305,"mtime":1621340582290,"results":"87","hashOfConfig":"56"},{"size":417,"mtime":1621340582293,"results":"88","hashOfConfig":"56"},{"size":362,"mtime":1621340582295,"results":"89","hashOfConfig":"56"},{"size":1451,"mtime":1621449725209,"results":"90","hashOfConfig":"56"},{"size":1391,"mtime":1621276041807,"results":"91","hashOfConfig":"56"},{"size":4068,"mtime":1621449797660,"results":"92","hashOfConfig":"56"},{"size":2220,"mtime":1621288182355,"results":"93","hashOfConfig":"56"},{"size":3452,"mtime":1621363530831,"results":"94","hashOfConfig":"56"},{"size":420,"mtime":1621275850855,"results":"95","hashOfConfig":"56"},{"size":988,"mtime":1621284831683,"results":"96","hashOfConfig":"56"},{"size":627,"mtime":1621261175727,"results":"97","hashOfConfig":"56"},{"size":1661,"mtime":1621442877169,"results":"98","hashOfConfig":"56"},{"size":760,"mtime":1621185972225,"results":"99","hashOfConfig":"56"},{"size":908,"mtime":1621195157067,"results":"100","hashOfConfig":"56"},{"size":894,"mtime":1621186043343,"results":"101","hashOfConfig":"56"},{"size":825,"mtime":1621184911340,"results":"102","hashOfConfig":"56"},{"size":884,"mtime":1621449943643,"results":"103","hashOfConfig":"56"},{"size":739,"mtime":1621187010048,"results":"104","hashOfConfig":"56"},{"size":11555,"mtime":1621692822573,"results":"105","hashOfConfig":"56"},{"size":7484,"mtime":1621614966714,"results":"106","hashOfConfig":"56"},{"size":6616,"mtime":1622034609748,"results":"107","hashOfConfig":"56"},{"size":3155,"mtime":1622033068768,"results":"108","hashOfConfig":"56"},{"size":4646,"mtime":1622035129832,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"sse09",{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"192","usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\index.js",[],["231","232"],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\App.js",["233","234","235","236","237"],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reportWebVitals.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\RestaurantDataTable.js",["238","239","240","241","242"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { TableHeader, Pagination, Search } from \"./components/DataTable\";\r\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\r\nimport ExternalInfo from \"./components/ExternalInfo\";\r\nimport AppConfig from \"./components/hoc/App.config\";\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport AddRestaurantLink from \"./AddRestaurantLink\";\r\n// \"@fortawesome/react-fontawesome\": \"^0.1.14\",\r\nimport CreateRestaurantComponent from \"../components/CreateRestaurantComponent\";\r\n\r\nconst DataTable = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 50;\r\n\r\n    const headers = [\r\n        { name: \"Name\", field: \"name\", sortable: true },\r\n        { name: \"Average Rating\", field: \"averageRating\", sortable: false },\r\n        { name: \"Tags\", field: \"tags\", sortable: true },\r\n        { name: \"City\", field: \"city\", sortable: true },\r\n        {name: \"Restaurant Actions\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n              // RestaurantService.getRestaurant()\r\n            // fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n/*            fetch(\"http://localhost:8080/restaurant\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    hideLoader();\r\n                    setComments(json);\r\n                });*/\r\n\r\n            RestaurantService.getRestaurant(0).then(res => res.data)\r\n                .then((data) => {\r\n                    hideLoader();\r\n                    setComments((comments) => data);\r\n                    // console.log(data);\r\n                });\r\n\r\n\r\n            // RestaurantService.getRestaurant().then((res) =>\r\n            // {\r\n            //     console.log(typeof res.data)\r\n            //     setComments(res.data)\r\n            //     // this.setState({restaurants: res.data});x\r\n            // });\r\n\r\n        };\r\n\r\n        // console.log(\"comments: \"+ typeof comments);\r\n\r\n        getData();\r\n    }, [hideLoader, showLoader, comments]);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        // console.log(\"computedComments: \"+ typeof computedComments);\r\n\r\n\r\n        //Search comments\r\n        if (search) {\r\n            // console.log(\"search = \"+search);\r\n            // computedComments = computedComments.filter(\r\n           computedComments = comments.filter(\r\n                comment =>\r\n                    comment.tags.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.averageRating.toString().includes(search) ||\r\n                    comment.city.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n            {/*<Header title=\"Building a data table in react\" />*/}\r\n            <h2 className=\"text-center\">Restaurant List</h2>\r\n            {/*<ExternalInfo page=\"datatable\" />*/}\r\n            <br/>\r\n\r\n            <div className=\"row w-100\">\r\n                <div className=\"col mb-3 col-12 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n\r\n\r\n                            />\r\n                        </div>\r\n{/*                        <div className=\"col-md-6 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(prevState => value);\r\n                                    console.log(\"value of value: \" + value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>*/}\r\n                    </div>\r\n\r\n                    {/*<div className=\"col-md-6 d-flex flex-row-reverse\">*/}\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {/*<button className=\"btn btn-primary\" onClick={this.addRestaurant}>Add Restaurant</button>*/}\r\n\r\n                        <AddRestaurantLink/>\r\n\r\n\r\n                        <Search\r\n                            onSearch={value => {\r\n                                setSearch(prevState => value);\r\n                                setCurrentPage(1);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <table className=\"table table-striped\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                        {commentsData.map(comment => (\r\n                            <tr>\r\n                                <th scope=\"row\" key={comment.id}>\r\n                                    {comment.name}\r\n                                </th>\r\n                                {/*<td>{comment.name}</td>*/}\r\n                                <td>{comment.averageRating}</td>\r\n                                <td>{comment.tags}</td>\r\n                                <td>{comment.city}</td>\r\n                                <td>\r\n                                    <button onClick={() => this.editRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\">Update\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.deleteRestaurant(comment.id)}\r\n                                            className=\"btn btn-danger\"> Delete\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.viewRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\"> View\r\n                                    </button>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {hideLoader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FooterComponent.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\RestaurantsComponents.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\HeaderComponent.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\UpdateRestaurant.js",["243"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass UpdateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.updateRestaurant = this.updateRestaurant.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestaurantService.getRestaurantById(this.state.id).then( (res) =>{\r\n            let restaurant = res.data;\r\n            this.setState({name: restaurant.name, averageRating: restaurant.averageRating, tags: restaurant.tags,\r\n                isActive: restaurant.isActive, priceCategory: restaurant.priceCategory, streetAddress: restaurant.streetAddress,\r\n                city: restaurant.city, state: restaurant.state, zipCode: restaurant.zipCode});\r\n        });\r\n    }\r\n\r\n    updateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {name: this.state.name, averageRating: this.state.averageRating, tags: this.state.tags,\r\n            isActive: this.state.isActive, priceCategory: this.state.priceCategory, streetAddress: this.state.streetAddress,\r\n            city: this.state.city, state: this.state.state, zipCode: this.state.zipCode};\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n        RestaurantService.updateRestaurant(restaurant,this.state.id).then(res => {\r\n            this.props.history.push('/restaurant');\r\n        });\r\n\r\n        // RestaurantService.createRestaurant(restaurant).then(res =>{\r\n        //     this.props.history.push('/restaurant');\r\n        // });\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/restaurant');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Restaurant</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.updateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateRestaurantComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateRestaurantComponent.js",["244"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass CreateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.saveOrUpdateRestaurant = this.saveOrUpdateRestaurant.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            RestaurantService.getRestaurantById(this.state.id).then((res) => {\r\n                let restaurant = res.data;\r\n                this.setState({\r\n                    name: restaurant.name,\r\n                    averageRating: restaurant.averageRating,\r\n                    tags: restaurant.tags,\r\n                    isActive: restaurant.isActive,\r\n                    priceCategory: restaurant.priceCategory,\r\n                    streetAddress: restaurant.streetAddress,\r\n                    city: restaurant.city,\r\n                    state: restaurant.state,\r\n                    zipCode: restaurant.zipCode\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {\r\n            name: this.state.name,\r\n            averageRating: this.state.averageRating,\r\n            tags: this.state.tags,\r\n            isActive: this.state.isActive,\r\n            priceCategory: this.state.priceCategory,\r\n            streetAddress: this.state.streetAddress,\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            zipCode: this.state.zipCode\r\n        };\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            RestaurantService.createRestaurant(restaurant).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        } else {\r\n            RestaurantService.updateRestaurant(restaurant, this.state.id).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Restaurant</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Restaurant</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateRestaurantComponent.propTypes = {};\r\n\r\nexport default CreateRestaurantComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FoodComponents.js",["245"],"import React, {Component} from 'react';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass FoodComponents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foods: []\r\n        }\r\n        this.addFood = this.addFood.bind(this);\r\n        this.editFood = this.editFood.bind(this);\r\n        this.deleteFood = this.deleteFood.bind(this);\r\n    }\r\n\r\n    deleteFood(id) {\r\n        FoodService.deleteFood(id).then(res => {\r\n            this.setState({foods: this.state.foods.filter(food => food.id !== id)});\r\n        });\r\n    }\r\n\r\n    viewRestaurant(id){\r\n        this.props.history.push(`/view-food/${id}`);\r\n    }\r\n\r\n    editFood(id) {\r\n        this.props.history.push(`/add-food/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FoodService.getFood().then((res) => {\r\n            this.setState({foods: res.data});\r\n        });\r\n    }\r\n\r\n    addFood() {\r\n        this.props.history.push('/add-food/add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Food List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addFood}>Add Food</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Restaurant ID</th>\r\n                            <th>Name</th>\r\n                            <th>Cost</th>\r\n                            <th>Image</th>\r\n                            <th>Summary</th>\r\n                            <th>Special</th>\r\n                            <th>Is Active</th>\r\n                            <th>Category</th>\r\n                            <th>Restaurant Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.foods.map(\r\n                                food =>\r\n                                    <tr key= {food.id}>\r\n                                        <td> {food.id}</td>\r\n                                        <td> {food.restaurantID}</td>\r\n                                        <td> {food.name}</td>\r\n                                        <td> {food.cost}</td>\r\n                                        <td> {food.image}</td>\r\n                                        <td> {food.summary}</td>\r\n                                        <td> {food.special}</td>\r\n                                        <td> {food.isActive}</td>\r\n                                        <td> {food.category}</td>\r\n                                        <td>\r\n                                            <button onClick={() => this.editFood(food.id)}\r\n                                                    className=\"btn btn-info\">Update\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.deleteFood(food.id)}\r\n                                                    className=\"btn btn-danger\"> Delete\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.viewRestaurant(food.id)}\r\n                                                    className=\"btn btn-info\"> View\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FoodComponents;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Account.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UpdateAccount.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Login.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UserInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateFoodComponent.js",["246"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass CreateFoodComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            restaurantID: '',\r\n            name: '',\r\n            cost: '',\r\n            image: '',\r\n            summary: '',\r\n            special: '',\r\n            isActive: '',\r\n            category: ''\r\n\r\n        }\r\n        this.changeRestaurantIDHandler = this.changeRestaurantIDHandler.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeCostHandler = this.changeCostHandler.bind(this);\r\n        this.changeImageHandler = this.changeImageHandler.bind(this);\r\n        this.changeSummaryHandler = this.changeSummaryHandler.bind(this);\r\n        this.changeSpecialHandler = this.changeSpecialHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changeCategoryHandler = this.changeCategoryHandler.bind(this);\r\n\r\n        this.saveOrUpdateFood = this.saveOrUpdateFood.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            FoodService.getFoodById(this.state.id).then((res) => {\r\n                let food = res.data;\r\n                this.setState({\r\n                    restaurantID: food.restaurantID,\r\n                    name: food.name,\r\n                    cost: food.cost,\r\n                    image: food.image,\r\n                    summary: food.summary,\r\n                    special: food.special,\r\n                    isActive: food.isActive,\r\n                    category: food.category\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateFood = (e) => {\r\n        e.preventDefault();\r\n        let food = {\r\n            restaurantID: this.state.restaurantID,\r\n            name: this.state.name,\r\n            cost: this.state.cost,\r\n            image: this.state.image,\r\n            summary: this.state.summary,\r\n            special: this.state.special,\r\n            isActive: this.state.isActive,\r\n            category: this.state.category\r\n        };\r\n        console.log('food => ' + JSON.stringify(food));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            FoodService.createFood(food).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        } else {\r\n            FoodService.updateFood(food, this.state.id).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeRestaurantIDHandler = (event) => {\r\n        this.setState({restaurantID: event.target.value});\r\n    }\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeCostHandler = (event) => {\r\n        this.setState({cost: event.target.value});\r\n    }\r\n    changeImageHandler = (event) => {\r\n        this.setState({image: event.target.value});\r\n    }\r\n    changeSummaryHandler = (event) => {\r\n        this.setState({summary: event.target.value});\r\n    }\r\n    changeSpecialHandler = (event) => {\r\n        this.setState({special: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changeCategoryHandler = (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/food');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Food</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Food</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant ID:</label>\r\n                                        <input placeholder=\"Restaurant ID\" name=\"restaurantID\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.restaurantID}\r\n                                               onChange={this.changeRestaurantIDHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Food Name:</label>\r\n                                        <input placeholder=\"Food Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cost:</label>\r\n                                        <input placeholder=\"Cost\" name=\"cost\" className=\"form-control\"\r\n                                               value={this.state.cost} onChange={this.changeCostHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Image:</label>\r\n                                        <input placeholder=\"Image\" name=\"image\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.image}\r\n                                               onChange={this.changeImageHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Summary:</label>\r\n                                        <input placeholder=\"Summary\" name=\"summary\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.summary}\r\n                                               onChange={this.changeSummaryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Special:</label>\r\n                                        <input placeholder=\"Special\" name=\"special\" className=\"form-control\"\r\n                                               value={this.state.special} onChange={this.changeSpecialHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category:</label>\r\n                                        <input placeholder=\"Category\" name=\"category\" className=\"form-control\"\r\n                                               value={this.state.category} onChange={this.changeCategoryHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateFood}>Save\r\n                                    </button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFoodComponent.propTypes = {};\r\n\r\nexport default CreateFoodComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewRestaurantComponent.jsx",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewFoodComponent.jsx",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\Header.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\AddRestaurantLink.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\DataTable.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useFullPageLoader.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\ExternalInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\RestaurantService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\App.config.js",["247"],"const GIT_REPO =\r\n    \"https://github.com/codegeous/react-component-depot/tree/master/src/\";\r\nconst YOUTUBE_BASE = \"https://youtu.be/\";\r\n\r\nexport default {\r\n    api: process.env.REACT_APP_API_ENDPOINT,\r\n\r\n    GOOGLE: {\r\n        GAPI_KEY: \"\",\r\n        reCaptcha: process.env.REACT_APP_RECAPCTHA_SITE_TOKEN,\r\n        GA_TRACKING_CODE: process.env.REACT_APP_GA_TRACKING_CODE,\r\n    },\r\n\r\n    hCaptchaSiteToken: process.env.REACT_APP_HCAPTCHA_SITE_TOKEN,\r\n\r\n    links: {\r\n        customGoogleMaps: {\r\n            tutorial: `${YOUTUBE_BASE}xUsn2nj4fy0`,\r\n            code: `${GIT_REPO}pages/GoogleMaps/CustomStyle/index.js`,\r\n        },\r\n        buttonLoaderHooks: {\r\n            tutorial: `${YOUTUBE_BASE}nCEnqQABC5A`,\r\n            code: `${GIT_REPO}pages/ButtonLoadingSpinner/index.js`,\r\n        },\r\n        otpBox: {\r\n            tutorial: `${YOUTUBE_BASE}qf56frPk5lA`,\r\n            code: `${GIT_REPO}pages/OTPBox/index.js`,\r\n        },\r\n        contactListCRUD: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/ContactList/index.js`,\r\n        },\r\n        showAndHideElements: {\r\n            tutorial: `${YOUTUBE_BASE}jRxoO-Zd0pQ`,\r\n            code: `${GIT_REPO}pages/ReactBasics/ShowAndHide/index.js`,\r\n        },\r\n        scrollIndicator: {\r\n            tutorial: `${YOUTUBE_BASE}-rYmnXV6sYw`,\r\n            code: `${GIT_REPO}components/ScrollIndicator/index.js`,\r\n        },\r\n        floatingYoutubePlayer: {\r\n            tutorial: `${YOUTUBE_BASE}lT4uJI6TXAg`,\r\n            code: `${GIT_REPO}components/YoutubePlayer/index.js`,\r\n        },\r\n        signup: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/Signup/index.js`,\r\n        },\r\n        hooks: {\r\n            tutorial: `${YOUTUBE_BASE}fT7jBMG7GIM`,\r\n            code: `${GIT_REPO}pages/HooksDemo/index.js`,\r\n        },\r\n        datatable: {\r\n            tutorial: `${YOUTUBE_BASE}emX5KvZ6Hbo`,\r\n            code: `${GIT_REPO}pages/DataTable/index.js`,\r\n        },\r\n        batteryStatus: {\r\n            tutorial: `${YOUTUBE_BASE}50cOgnVmflE`,\r\n            code: `${GIT_REPO}pages/BatteryStatus/index.js`,\r\n        },\r\n        fileupload: {\r\n            tutorial: `${YOUTUBE_BASE}_XD5ko7Fy9E`,\r\n            code: `${GIT_REPO}pages/FileUpload/index.js`,\r\n        },\r\n        geoLocation: {\r\n            tutorial: `${YOUTUBE_BASE}TID8Z29je5o`,\r\n            code: `${GIT_REPO}pages/GeoLocation/index.js`,\r\n        },\r\n        infniteScrolling: {\r\n            tutorial: `${YOUTUBE_BASE}8nFNxnjoTZ4`,\r\n            code: `${GIT_REPO}pages/InfiniteScrolling/index.js`,\r\n        },\r\n        recaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}e_vMoPCBfqU`,\r\n            code: `${GIT_REPO}pages/ReCaptcha/index.js`,\r\n        },\r\n        hcaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}KcLeXxlkqf0`,\r\n            code: `${GIT_REPO}pages/HCaptcha/index.js`,\r\n        },\r\n        autocomplete: {\r\n            tutorial: `${YOUTUBE_BASE}G2QyeafA3gw`,\r\n            code: `${GIT_REPO}pages/CountrySearch/index.js`,\r\n        },\r\n        searchFilter: {\r\n            tutorial: `${YOUTUBE_BASE}aBWwJ4ibpps`,\r\n            code: `${GIT_REPO}pages/SearchFilter/index.js`,\r\n        },\r\n        accordion: {\r\n            tutorial: `${YOUTUBE_BASE}AjQctXfmOqw`,\r\n            code: `${GIT_REPO}pages/AccordionDemo/index.js`,\r\n        },\r\n        leafletBasic: {\r\n            tutorial: `${YOUTUBE_BASE}i9oX1upSKjI`,\r\n            code: `${GIT_REPO}pages/Leaflet/basic.js`,\r\n        },\r\n        leafletMarker: {\r\n            tutorial: `${YOUTUBE_BASE}UNSYoW3gkDc`,\r\n            code: `${GIT_REPO}pages/Leaflet/markers.js`,\r\n        },\r\n        leafletCurrentLocation: {\r\n            tutorial: `${YOUTUBE_BASE}7jWYLirwt0k`,\r\n            code: `${GIT_REPO}pages/Leaflet/currentLocation.js`,\r\n        },\r\n        leafletDraw: {\r\n            tutorial: `${YOUTUBE_BASE}Bp_6MkKSOQE`,\r\n            code: `${GIT_REPO}pages/Leaflet/draw.js`,\r\n        },\r\n        treeList: {\r\n            tutorial: `${YOUTUBE_BASE}uRSzyVubap4`,\r\n            code: `${GIT_REPO}pages/TreeList/index.js`,\r\n        },\r\n        fileDownloader: {\r\n            tutorial: `${YOUTUBE_BASE}0AS9Gfd1j5s`,\r\n            code: `${GIT_REPO}pages/FileDownloader/index.js`,\r\n        },\r\n        imageZoom: {\r\n            tutorial: `${YOUTUBE_BASE}uhgQFqr9ezQ`,\r\n            code: `${GIT_REPO}pages/ImageZoom/index.js`,\r\n        },\r\n        starRating: {\r\n            tutorial: `${YOUTUBE_BASE}nErdlbLWqtA`,\r\n            code: `${GIT_REPO}pages/Rating/index.js`,\r\n        },\r\n        leafletStaticMap: {\r\n            tutorial: `${YOUTUBE_BASE}sz_FaLpMNZc`,\r\n            code: `${GIT_REPO}pages/Leaflet/StaticMap.js`,\r\n        },\r\n        leafletPrint: {\r\n            tutorial: `${YOUTUBE_BASE}mhGqgY2l-ik`,\r\n            code: `${GIT_REPO}pages/Leaflet/Print.js`,\r\n        },\r\n        tabs: {\r\n            tutorial: `${YOUTUBE_BASE}MLYH-o_EdaI`,\r\n            code: `${GIT_REPO}pages/SimpleTabs/index.js`,\r\n        },\r\n        dnd: {\r\n            tutorial: `${YOUTUBE_BASE}O2dTW3uNAeQ`,\r\n            code: `${GIT_REPO}pages/TeamSelection/index.js`,\r\n        },\r\n    },\r\n    youtubeVideos: [\r\n        {\r\n            title: \"Full page loading spinner for API calls in ReactJS with Redux\",\r\n            id: \"vCs50MV-TbM\",\r\n        },\r\n        {\r\n            title: \"File Upload with progress bar in React JS and axios\",\r\n            id: \"Ti8QNiRRzOA\",\r\n        },\r\n        {\r\n            title: \"Add loading spinner for buttons in reactjs\",\r\n            id: \"vgDObZGhQuw\",\r\n        },\r\n        {\r\n            title: \"Display fallback image for a broken image link in reactjs \",\r\n            id: \"90P1_xCaim4\",\r\n        },\r\n        {\r\n            title: \"Material style preloader for image tag in react js\",\r\n            id: \"GBHBjv6xfY4\",\r\n        },\r\n        {\r\n            title: \"Building a search filter in reactjs\",\r\n            id: \"RM_nXOyHwN0\",\r\n        },\r\n    ],\r\n};\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\FoodService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\UserService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\AuthenticationService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\layout.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Header.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Search.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Pagination.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\FullPageLoader.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\withExternalInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useGAEventTracker.js",["248"],"import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst useGAEventTracker = (category = \"Category\") => {\r\n    const trackEvent = (action = \"action\", label = \"label\") => {\r\n        ReactGA.event({\r\n            category,\r\n            action,\r\n            label,\r\n        });\r\n    };\r\n\r\n    return trackEvent;\r\n};\r\n\r\nexport default useGAEventTracker;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\PageHeader.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\Popup.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\useTable.js",["249"],"import React, {useState} from 'react';\r\nimport {makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        position:\"center\",\r\n        width : \"100%\"\r\n    },\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            // color: theme.palette.primary.main,\r\n            // backgroundColor: theme.palette.primary.light,\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n}))\r\n\r\nexport default function useTable(records, headCells, filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 25]\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] =\r\n        useState(pages[page]);\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n\r\n    const TblContainer = props => (\r\n        <Table className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc')\r\n            setOrderBy(cellId)\r\n        }\r\n\r\n        return (<TableHead>\r\n            <TableRow>\r\n                {\r\n                    headCells.map(headCell =>\r\n                        (<TableCell key={headCell.id}\r\n                                    sortDirction={orderBy === headCell.id ? order : false}>\r\n                            {headCell.disableSorting ? headCell.label :\r\n                                <TableSortLabel\r\n                                    active={orderBy === headCell.id}\r\n                                    direction={orderBy === headCell.id ? order : 'asc'}\r\n                                    onClick={() => {\r\n                                        handleSortRequest(headCell.id)\r\n                                    }}>\r\n                                    {headCell.label}\r\n                                </TableSortLabel>\r\n                            }\r\n                        </TableCell>))\r\n                }\r\n\r\n            </TableRow>\r\n        </TableHead>)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records.length}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPagingAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy)).\r\n        slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n    }\r\n\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\ConfirmDialog.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\services\\employeeService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Controls.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Notification.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\input.js",["250"],"import React from 'react';\r\nimport {Grid, TextField} from \"@material-ui/core\";\r\n\r\nexport default function Input(props) {\r\n\r\n    const {name, label, value,error=null, onChange, ...other} = props;\r\n\r\n    return (\r\n        <TextField\r\n            variant = {\"outlined\"}\r\n            label = {label}\r\n            name = {name}\r\n            value = {value}\r\n            onChange = {onChange}\r\n            {...other}\r\n/*            error\r\n            helperText=\"Some Validation Error.\"*/\r\n            // need to ask about this syntax below\r\n            {...(error && {error:true, helperText:error})}\r\n\r\n        />\r\n\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\useForm.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Checkbox.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Select.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\DatePicker.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\RadioGroup.js",["251"],"import React from 'react';\r\nimport {FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup} from \"@material-ui/core\";\r\n\r\nexport default function RadioGroup(props) {\r\n\r\nconst {name, label, value, onChange, items} = props;\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel>Gender</FormLabel>\r\n            <MuiRadioGroup row\r\n                        name={name}\r\n                        value={value}\r\n                        onChange={onChange}>\r\n                {\r\n                    items.map(\r\n                        (item)=>(\r\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\r\n\r\n                        )\r\n                    )\r\n                }\r\n            </MuiRadioGroup>\r\n        </FormControl>\r\n    );\r\n\r\n}\r\n\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\ActionButton.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\controls\\Button.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\Restaurants.js",["252","253","254","255","256","257","258"],"import React, {useEffect, useState} from 'react';\r\nimport RestaurantForm from \"./RestaurantForm\";\r\nimport PageHeader from \"../../components/PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\r\nimport {InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@material-ui/core\";\r\nimport useTable from \"../../components/useTable\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport {EditOutlined, Search} from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport Popup from \"../../components/Popup\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Notification from \"../../components/controls/Notification\";\r\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\r\nimport RestaurantService from \"../../../../services/RestaurantService\";\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport useStateWithCallback, {useStateWithCallbackInstant} from 'use-state-with-callback';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    }\r\n}))\r\n\r\nconst headCells = [\r\n    {id: \"name\", label: \"Name\"},\r\n    {id: \"averageRating\", label: \"Average Rating\"},\r\n    {id: \"tags\", label: \"Tags\"},\r\n    {id: \"city\", label: \"City\", /*disableSorting: true*/},\r\n    {id: \"isActive\", label: \"Is Active\"},\r\n    {id: \"actions\", label: \"Actions\", disableSorting: true}\r\n]\r\n\r\nexport default function Restaurants(props) {\r\n\r\n    const getData = /*async*/ () => {\r\n        return RestaurantService.getRestaurant(0).then(res => res.data)\r\n            .then((data) => {\r\n                setRecords(() => data);\r\n                // setRecords((records) => data);\r\n            });\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n\r\n\r\n\r\n    const getDataTwo = /*async*/ () => {\r\n        return RestaurantService.getRestaurant(0).then(res => res.data)\r\n            .then((data) => {\r\n                setRecords(() => data);\r\n                console.log(\"getDataTwo \")\r\n                // setRecords((records) => data);\r\n            });\r\n    }\r\n\r\n    //intial Restaurant List holder\r\n    const [records, setRecords] = useState([]);\r\n\r\n    // fetch( 'http://localhost:8080/restaurant/all/page/0')\r\n    // .then(response => response.json()))\r\n    // .then(data => console.log(data)));\r\n    // (restaurants === undefined||restaurants === null) ? \"\" : restaurants);\r\n\r\n    // console.log(records);\r\n\r\n\r\n\r\n    const [filterFn, setFilterFn] = useState({\r\n        fn: items => {\r\n            return items;\r\n        }\r\n    });\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notify, setNotify] = useState({isOpen: false, message: '', type: ''});\r\n    const [confirmDialog, setConfirmDialog] =\r\n        useState({isOpen: false, title: \"\", subTitle: \"\"});\r\n\r\n/*    const [refreshData, setRefreshData] = useStateWithCallbackInstant(1,x => {\r\n        RestaurantService.getRestaurant(0).then(res => res.data)\r\n            .then((data) => {\r\n                setRecords(() => data);\r\n            });\r\n    })*/\r\n    // const [refreshData, setRefreshData] = useState(1);\r\n\r\n    // useEffect(() => {\r\n    //     getData()/\r\n    // }, [setRefreshData()]);\r\n\r\n    //intial load of Page******\r\n    useEffect(() => {\r\n        getData()/*.then(R => {return R})*/;\r\n        // console.log(1);\r\n        // console.log(records.data);\r\n    }, []);\r\n\r\n/*    useEffect(() => {\r\n        fetch(\"http://localhost:8080/restaurant/all/page/0\")\r\n              .then(response => response.json())\r\n              .then(json => setRecords(json));\r\n    }, [refreshData]);*/\r\n\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    //value toLowerCase so that it matches cases\r\n                    return items.filter(x => x.name.toLowerCase().includes(target.value.toLowerCase()))\r\n            }\r\n        })\r\n    }\r\n\r\n    let someValue =3;\r\n\r\n    // getDataTwo()/*.then(r =>setRecords(r.data) )*/;\r\n    const reData = () => {\r\n        // setRefreshData(()=>{\r\n        //     return 2 + refreshData;\r\n        // });\r\n        // setRefreshData(3);\r\n        // setRefreshData( {\r\n        //     ...refreshData,\r\n        //     [refreshData]:someValue\r\n        // })\r\n        // console.log(\"before: \" + refreshData)\r\n\r\n        // setRefreshData({\r\n        //     refreshData: 3\r\n        // }, console.log('after setState' + refreshData))\r\n\r\n\r\n        // this.setState({\r\n        //     loading: !this.state.loading\r\n        // }, console.log('after setState', this.state.loading))\r\n\r\n\r\n        // console.log(refreshData);\r\n    }\r\n\r\n    const getDataThree = () => {\r\n        return RestaurantService.getRestaurant(0);\r\n    }\r\n\r\n\r\n    //inserting or Updating records\r\n    const addOrEdit = (employee, resetForm) => {\r\n        if (employee.id === 0) {\r\n            console.log(employee);\r\n            RestaurantService.createRestaurant(employee);\r\n        }\r\n        // employeeService.insertEmployee(employee);\r\n        else {\r\n            RestaurantService.updateRestaurant(employee, employee.id);\r\n            // employeeService.updateEmployee(employee);}\r\n        }\r\n        resetForm();\r\n\r\n        getDataTwo().then(result => {\r\n            if(result) {\r\n                setRecords(result.data);\r\n                console.log(\"getTwo\");\r\n            }\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        })\r\n\r\n\r\n\r\n        getDataThree().then((result) => {\r\n            if(result.status >= 200 && result.status <= 300){\r\n                setRecords(result.data);\r\n                console.log(\"getThree \" + result.status);\r\n            }\r\n        })\r\n\r\n        getDataThree().catch((error) => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n\r\n        setRecordForEdit(null);\r\n        setOpenPopup(false);\r\n        // window.location.reload();\r\n        // setRecords(getData());\r\n\r\n        // reData();\r\n        // console.log(refreshData);\r\n\r\n/*        setRefreshData(2);\r\n        console.log(refreshData);*/\r\n\r\n        setNotify({\r\n            isOpen: true,\r\n            message: \"Submitted Successfully\",\r\n            type: \"success\"\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item);\r\n        setOpenPopup(true);\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        RestaurantService.deleteRestaurant(id);\r\n        // employeeService.deleteEmployee(id);\r\n        // setRecords(employeeService.getData);\r\n        setNotify({\r\n            isOpen: true,\r\n            message: \"Deleted Successfully\",\r\n            type: \"error\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PageHeader\r\n                title=\"Restaurants\"\r\n                subTitle=\"Add, Edit, or Delete a Restaurant\"\r\n                icon={<RestaurantIcon fontSize=\"large\"/>}\r\n                // icon={<PeopleOutlineTwoToneIcon fontSize=\"large\"/>}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Restaurants\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search/>\r\n                            </InputAdornment>)\r\n\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                        text=\"Add New\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon/>}\r\n                        className={classes.newButton}\r\n                        onClick={() => {\r\n                            setOpenPopup(true);\r\n                            setRecordForEdit(null);\r\n                        }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead/>\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item => (\r\n                                <TableRow key={item.id}>\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell>{item.averageRating}</TableCell>\r\n                                    <TableCell>{item.tags}</TableCell>\r\n                                    <TableCell>{item.city}</TableCell>\r\n                                    <TableCell>{item.isActive ? \"Active\": \"Inactive\"}</TableCell>\r\n                                    <TableCell>\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => {\r\n                                                openInPopup(item)\r\n                                            }}>\r\n                                            <EditOutlinedIcon fontSize=\"small\"/>\r\n                                        </Controls.ActionButton>\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you wish to delete this record?',\r\n                                                    subTitle: \"You can not undo this operation\",\r\n                                                    onConfirm: () => onDelete(item.id)\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\"/>\r\n                                        </Controls.ActionButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination/>\r\n            </Paper>\r\n            <Popup\r\n                title=\"New Restaurant Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <RestaurantForm\r\n                    recordForEdit={recordForEdit}\r\n                    addOrEdit={addOrEdit}\r\n                />\r\n            </Popup>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\RestaurantForm.js",["259","260","261","262","263","264","265","266","267","268","269"],"import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Grid,\r\n    makeStyles,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {useForm, Form} from \"../../components/useForm\";\r\nimport Controls from \"../../components/controls/Controls\";\r\nimport * as employeeService from \"../../services/employeeService\";\r\n\r\n\r\nconst priceCategoryItems = [\r\n    {id: \"1\", title: \"1\"},\r\n    {id: \"2\", title: \"2\"},\r\n    {id: \"3\", title: \"3\"},\r\n    {id: \"4\", title: \"4\"},\r\n    {id: \"5\", title: \"5\"}\r\n\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    name: '',\r\n    averageRating: '',\r\n    tags: '',\r\n    isActive: false,\r\n    priceCategory: '',\r\n    streetAddress: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode:''\r\n}\r\n\r\n\r\nexport default function RestaurantForm(props) {\r\n/*    //destructured Array declaration\r\n        const [x, setx] = useState(5);\r\n        setx(6);\r\n\r\n        let y = x +3;\r\n\r\n    /!*    the first param the func, will run when\r\n        ever the value of one of the 2nd param\r\n        array memebers changes*!/\r\n        useEffect(() => {\r\n        }\r\n        ,[x,y]);*/\r\n\r\n    const { addOrEdit, recordForEdit } = props\r\n    // console.log(recordForEdit);\r\n    // console.log(props.recordForEdit);\r\n\r\n    // const validate = (fieldValues = (values.id !== 0 ? recordForEdit : values)) => {\r\n// console.log(typeof values);\r\n// console.log(\"values: \" + values);\r\n// console.log(fieldValues);\r\n// console.log(fieldValues.zipCode.length);\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if (\"name\" in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n        // if (\"email\" in fieldValues)\r\n        //     temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if (\"streetAddress\" in fieldValues)\r\n            temp.streetAddress = fieldValues.streetAddress ? \"\" : \"This field is required.\"\r\n        if (\"zipCode\" in fieldValues)\r\n            temp.zipCode = fieldValues.zipCode.length > 4 ? \"\" : \"Minimum 5 numbers required.\"\r\n        // console.log(\"temp.zipCode: \" + temp.zipCode);\r\n        // console.log(\"fieldValues.zipCode.length \" + fieldValues.zipCode.length);\r\n        if (\"departmentId\" in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm((/*recordForEdit !== undefined ? recordForEdit :*/ initialFValues), true, validate);\r\n    // } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            //insert data call to backend simulation\r\n            addOrEdit(values, resetForm);\r\n            // employeeService.insertEmployee(values);\r\n            // resetForm();\r\n        }\r\n        // window.alert(\"testing...\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(recordForEdit !== null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n        console.log(recordForEdit);\r\n    }, [recordForEdit]);\r\n    \r\n\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleInputChange}\r\n                        error={errors.name}\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"Average Rating\"}\r\n                        name=\"averageRating\"\r\n                        value={values.averageRating}\r\n                        onChange={handleInputChange}\r\n                        error={errors.averageRating}\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"Tags\"}\r\n                        name=\"tags\"\r\n                        value={values.tags}\r\n                        onChange={handleInputChange}\r\n                        error={errors.tags}\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"Street Address\"}\r\n                        name=\"streetAddress\"\r\n                        value={values.streetAddress}\r\n                        onChange={handleInputChange}\r\n                        error={errors.streetAddress}\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"City\"}\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                        error={errors.city}\r\n\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"State\"}\r\n                        name=\"state\"\r\n                        value={values.state}\r\n                        onChange={handleInputChange}\r\n                        error={errors.state}\r\n\r\n                    />\r\n                    <Controls.Input\r\n                        label={\"Zip Code\"}\r\n                        name=\"zipCode\"\r\n                        value={values.zipCode}\r\n                        onChange={handleInputChange}\r\n                        error={errors.zipCode}\r\n\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n{/*                    <Controls.RadioGroup\r\n                        name=\"priceCategory\"\r\n                        value={values.priceCategory}\r\n                        label=\"Price Cat\"\r\n                        onChange={handleInputChange}\r\n                        items={priceCategoryItems}\r\n                    />*/}\r\n                    <Controls.Select\r\n                        name=\"priceCategory\"\r\n                        label=\"Price Category\"\r\n                        value={values.priceCategory}\r\n                        onChange={handleInputChange}\r\n                        options={priceCategoryItems}\r\n                        // options={employeeService.getDepartmentCollection()}\r\n                        error={errors.priceCategory}\r\n                    />\r\n{/*                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />*/}\r\n                    <Controls.Checkbox\r\n                        name=\"isActive\"\r\n                        label=\"Is Active\"\r\n                        value={values.isActive ? 1 : 0}\r\n                        onChange={handleInputChange}\r\n                        error={errors.isActive}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\"/>\r\n                        <Controls.Button\r\n                            color=\"default\"\r\n                            text=\"Reset\"\r\n                            onClick={resetForm}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n\r\n\r\n    );\r\n}\r\n\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\pages\\Employees\\FoodMenuForm.js",["270","271","272","273","274","275","276","277","278","279","280","281"],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\GridSingleLine.js",["282"],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\materialUi\\src\\components\\AlignList.js",[],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":1,"column":8,"nodeType":"289","messageId":"290","endLine":1,"endColumn":12},{"ruleId":"287","severity":1,"message":"291","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":23},{"ruleId":"287","severity":1,"message":"292","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":24},{"ruleId":"287","severity":1,"message":"293","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":22},{"ruleId":"287","severity":1,"message":"294","line":13,"column":8,"nodeType":"289","messageId":"290","endLine":13,"endColumn":17},{"ruleId":"287","severity":1,"message":"295","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":14},{"ruleId":"287","severity":1,"message":"296","line":5,"column":8,"nodeType":"289","messageId":"290","endLine":5,"endColumn":20},{"ruleId":"287","severity":1,"message":"297","line":6,"column":8,"nodeType":"289","messageId":"290","endLine":6,"endColumn":17},{"ruleId":"287","severity":1,"message":"298","line":10,"column":8,"nodeType":"289","messageId":"290","endLine":10,"endColumn":33},{"ruleId":"287","severity":1,"message":"299","line":14,"column":12,"nodeType":"289","messageId":"290","endLine":14,"endColumn":18},{"ruleId":"287","severity":1,"message":"300","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":17},{"ruleId":"287","severity":1,"message":"300","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":17},{"ruleId":"287","severity":1,"message":"301","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":25},{"ruleId":"287","severity":1,"message":"300","line":2,"column":8,"nodeType":"289","messageId":"290","endLine":2,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":5,"column":1,"nodeType":"304","endLine":168,"endColumn":3},{"ruleId":"287","severity":1,"message":"305","line":1,"column":8,"nodeType":"289","messageId":"290","endLine":1,"endColumn":13},{"ruleId":"306","severity":1,"message":"307","line":122,"column":79,"nodeType":"308","messageId":"309","endLine":122,"endColumn":80,"fix":"310"},{"ruleId":"287","severity":1,"message":"311","line":2,"column":9,"nodeType":"289","messageId":"290","endLine":2,"endColumn":13},{"ruleId":"287","severity":1,"message":"312","line":6,"column":14,"nodeType":"289","messageId":"290","endLine":6,"endColumn":19},{"ruleId":"287","severity":1,"message":"313","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":32},{"ruleId":"287","severity":1,"message":"314","line":7,"column":13,"nodeType":"289","messageId":"290","endLine":7,"endColumn":28},{"ruleId":"287","severity":1,"message":"315","line":9,"column":9,"nodeType":"289","messageId":"290","endLine":9,"endColumn":21},{"ruleId":"287","severity":1,"message":"316","line":18,"column":8,"nodeType":"289","messageId":"290","endLine":18,"endColumn":28},{"ruleId":"287","severity":1,"message":"317","line":18,"column":31,"nodeType":"289","messageId":"290","endLine":18,"endColumn":58},{"ruleId":"287","severity":1,"message":"318","line":137,"column":9,"nodeType":"289","messageId":"290","endLine":137,"endColumn":18},{"ruleId":"287","severity":1,"message":"319","line":140,"column":11,"nodeType":"289","messageId":"290","endLine":140,"endColumn":17},{"ruleId":"287","severity":1,"message":"320","line":1,"column":16,"nodeType":"289","messageId":"290","endLine":1,"endColumn":24},{"ruleId":"287","severity":1,"message":"321","line":3,"column":5,"nodeType":"289","messageId":"290","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"322","line":4,"column":5,"nodeType":"289","messageId":"290","endLine":4,"endColumn":21},{"ruleId":"287","severity":1,"message":"323","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":14},{"ruleId":"287","severity":1,"message":"324","line":7,"column":5,"nodeType":"289","messageId":"290","endLine":7,"endColumn":15},{"ruleId":"287","severity":1,"message":"325","line":8,"column":5,"nodeType":"289","messageId":"290","endLine":8,"endColumn":10},{"ruleId":"287","severity":1,"message":"326","line":9,"column":5,"nodeType":"289","messageId":"290","endLine":9,"endColumn":15},{"ruleId":"287","severity":1,"message":"327","line":10,"column":5,"nodeType":"289","messageId":"290","endLine":10,"endColumn":14},{"ruleId":"287","severity":1,"message":"314","line":14,"column":13,"nodeType":"289","messageId":"290","endLine":14,"endColumn":28},{"ruleId":"328","severity":1,"message":"329","line":77,"column":65,"nodeType":"330","messageId":"331","endLine":77,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":113,"column":8,"nodeType":"334","endLine":113,"endColumn":23,"suggestions":"335"},{"ruleId":"287","severity":1,"message":"320","line":1,"column":16,"nodeType":"289","messageId":"290","endLine":1,"endColumn":24},{"ruleId":"287","severity":1,"message":"321","line":3,"column":5,"nodeType":"289","messageId":"290","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"322","line":4,"column":5,"nodeType":"289","messageId":"290","endLine":4,"endColumn":21},{"ruleId":"287","severity":1,"message":"323","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":5,"endColumn":14},{"ruleId":"287","severity":1,"message":"324","line":7,"column":5,"nodeType":"289","messageId":"290","endLine":7,"endColumn":15},{"ruleId":"287","severity":1,"message":"325","line":8,"column":5,"nodeType":"289","messageId":"290","endLine":8,"endColumn":10},{"ruleId":"287","severity":1,"message":"326","line":9,"column":5,"nodeType":"289","messageId":"290","endLine":9,"endColumn":15},{"ruleId":"287","severity":1,"message":"327","line":10,"column":5,"nodeType":"289","messageId":"290","endLine":10,"endColumn":14},{"ruleId":"287","severity":1,"message":"314","line":14,"column":13,"nodeType":"289","messageId":"290","endLine":14,"endColumn":28},{"ruleId":"287","severity":1,"message":"336","line":15,"column":8,"nodeType":"289","messageId":"290","endLine":15,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":56,"column":65,"nodeType":"330","messageId":"331","endLine":56,"endColumn":67},{"ruleId":"332","severity":1,"message":"333","line":89,"column":8,"nodeType":"334","endLine":89,"endColumn":23,"suggestions":"337"},{"ruleId":"287","severity":1,"message":"338","line":8,"column":13,"nodeType":"289","messageId":"290","endLine":8,"endColumn":21},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FooterComponent' is defined but never used.","'UpdateRestaurant' is defined but never used.","'FoodComponents' is defined but never used.","'DataTable' is defined but never used.","'Header' is defined but never used.","'ExternalInfo' is defined but never used.","'AppConfig' is defined but never used.","'CreateRestaurantComponent' is defined but never used.","'loader' is assigned a value but never used.","'PropTypes' is defined but never used.","'RestaurantService' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"341","text":"342"},"'Grid' is defined but never used.","'label' is assigned a value but never used.","'PeopleOutlineTwoToneIcon' is defined but never used.","'employeeService' is defined but never used.","'EditOutlined' is defined but never used.","'useStateWithCallback' is defined but never used.","'useStateWithCallbackInstant' is defined but never used.","'someValue' is assigned a value but never used.","'reData' is assigned a value but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'makeStyles' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'TextField' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["343"],"'SingleLineGridList' is defined but never used.",["344"],"'tileData' is defined but never used.","no-global-assign","no-unsafe-negation",[3861,3872],"\r\n        .",{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"348","text":"349"},{"range":"350","text":"349"},[3390,3405],"[recordForEdit, setValues]",[2427,2442]]