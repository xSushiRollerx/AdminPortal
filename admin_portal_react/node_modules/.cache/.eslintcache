[{"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\index.js":"1","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\App.js":"2","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reportWebVitals.js":"3","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\RestaurantDataTable.js":"4","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\HeaderComponent.js":"5","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FoodComponents.js":"6","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FooterComponent.js":"7","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\RestaurantsComponents.js":"8","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\UpdateRestaurant.js":"9","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateRestaurantComponent.js":"10","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateFoodComponent.js":"11","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Account.js":"12","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UserInfo.js":"13","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UpdateAccount.js":"14","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Login.js":"15","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewFoodComponent.jsx":"16","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewRestaurantComponent.jsx":"17","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\Header.js":"18","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\AddRestaurantLink.js":"19","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\ExternalInfo.js":"20","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\RestaurantService.js":"21","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\DataTable.js":"22","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\App.config.js":"23","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useFullPageLoader.js":"24","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\UserService.js":"25","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\FoodService.js":"26","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\AuthenticationService.js":"27","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\layout.js":"28","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\withExternalInfo.js":"29","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useGAEventTracker.js":"30","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Pagination.js":"31","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Header.js":"32","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Search.js":"33","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\FullPageLoader.js":"34"},{"size":565,"mtime":1621084146918,"results":"35","hashOfConfig":"36"},{"size":2914,"mtime":1621093172548,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1621084146934,"results":"38","hashOfConfig":"36"},{"size":7659,"mtime":1621096966078,"results":"39","hashOfConfig":"36"},{"size":1560,"mtime":1621084146918,"results":"40","hashOfConfig":"36"},{"size":4045,"mtime":1621084146918,"results":"41","hashOfConfig":"36"},{"size":467,"mtime":1621084146918,"results":"42","hashOfConfig":"36"},{"size":4398,"mtime":1621084146918,"results":"43","hashOfConfig":"36"},{"size":8596,"mtime":1621084146918,"results":"44","hashOfConfig":"36"},{"size":9671,"mtime":1621095671329,"results":"45","hashOfConfig":"36"},{"size":8696,"mtime":1621084146918,"results":"46","hashOfConfig":"36"},{"size":365,"mtime":1621084146918,"results":"47","hashOfConfig":"36"},{"size":2032,"mtime":1621084146918,"results":"48","hashOfConfig":"36"},{"size":6849,"mtime":1621084146918,"results":"49","hashOfConfig":"36"},{"size":2100,"mtime":1621084146918,"results":"50","hashOfConfig":"36"},{"size":2620,"mtime":1621084146918,"results":"51","hashOfConfig":"36"},{"size":2949,"mtime":1621084146918,"results":"52","hashOfConfig":"36"},{"size":834,"mtime":1621084146918,"results":"53","hashOfConfig":"36"},{"size":1915,"mtime":1621096052722,"results":"54","hashOfConfig":"36"},{"size":1560,"mtime":1621084146918,"results":"55","hashOfConfig":"36"},{"size":770,"mtime":1621093453831,"results":"56","hashOfConfig":"36"},{"size":156,"mtime":1621084146918,"results":"57","hashOfConfig":"36"},{"size":5895,"mtime":1621084146918,"results":"58","hashOfConfig":"36"},{"size":396,"mtime":1621084146934,"results":"59","hashOfConfig":"36"},{"size":1117,"mtime":1621084146934,"results":"60","hashOfConfig":"36"},{"size":606,"mtime":1621084146934,"results":"61","hashOfConfig":"36"},{"size":259,"mtime":1621084146934,"results":"62","hashOfConfig":"36"},{"size":603,"mtime":1621084146934,"results":"63","hashOfConfig":"36"},{"size":417,"mtime":1621084146934,"results":"64","hashOfConfig":"36"},{"size":362,"mtime":1621084146934,"results":"65","hashOfConfig":"36"},{"size":1603,"mtime":1621084146918,"results":"66","hashOfConfig":"36"},{"size":1364,"mtime":1621084146918,"results":"67","hashOfConfig":"36"},{"size":588,"mtime":1621084146918,"results":"68","hashOfConfig":"36"},{"size":305,"mtime":1621084146918,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"x79rr1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\index.js",[],["147","148"],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\App.js",["149","150","151"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport HeaderComponent from \"./components/HeaderComponent\";\r\nimport FooterComponent from \"./components/FooterComponent\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport UpdateRestaurant from \"./components/UpdateRestaurant\";\r\nimport RestaurantsComponents from \"./components/RestaurantsComponents\";\r\nimport CreateRestaurantComponent from \"./components/CreateRestaurantComponent\";\r\nimport ViewRestaurantComponent from \"./components/ViewRestaurantComponent\";\r\nimport FoodComponents from \"./components/FoodComponents\";\r\nimport CreateFoodComponent from \"./components/CreateFoodComponent\";\r\nimport ViewFoodComponent from \"./components/ViewFoodComponent\";\r\nimport DataTable from \"./reactpagination/RestaurantDataTable.js\";\r\nimport Login from \"./components/AccountComponents/Login\";\r\nimport UserInfo from \"./components/AccountComponents/UserInfo\";\r\nimport UpdateAccount from \"./components/AccountComponents/UpdateAccount\";\r\nimport Account from \"./components/AccountComponents/Account\"\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            \r\n            <Router>\r\n                    <HeaderComponent/>\r\n                    <div className=\"container\">\r\n                        <Switch>\r\n                            <Route path = \"/login\" exact component = {Login}></Route>\r\n                            <Route path = \"/profile\" exact component = {UserInfo}></Route>\r\n                            <Route path = \"/update\" exact component = {UpdateAccount}></Route>\r\n                            <Route path = \"/\" exact component = {DataTable}></Route>\r\n                            {/*<Route path = \"/\" exact component = {RestaurantsComponents}></Route>*/}\r\n                            <Route path = \"/restaurant\" component = {RestaurantsComponents}></Route>\r\n                            {/*Step 1 To Use one Component for Add and Update*/}\r\n                            <Route path = \"/add-restaurant/:id\" component = {CreateRestaurantComponent}></Route>\r\n                            <Route path = \"/view-restaurant/:id\" component = {ViewRestaurantComponent}></Route>\r\n                            {/*<Route path = \"/update-restaurant/:id\" component = {UpdateRestaurant}></Route>*/}\r\n                            {/*<Route path = \"/\" exact component = {FoodComponents}></Route>*/}\r\n                            <Route path = \"/food\" component = {FoodComponents}></Route>\r\n                            <Route path = \"/add-food/:id\" component = {CreateFoodComponent}></Route>\r\n                            <Route path = \"/view-food/:id\" component = {ViewFoodComponent}></Route>\r\n                            <Route path = \"/account\" component = {Account}></Route>\r\n                        </Switch>\r\n                    </div>\r\n            </Router>\r\n            {/*<FooterComponent/>*/}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reportWebVitals.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\RestaurantDataTable.js",["152","153","154","155","156"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { TableHeader, Pagination, Search } from \"./components/DataTable\";\r\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\r\nimport ExternalInfo from \"./components/ExternalInfo\";\r\nimport AppConfig from \"./components/hoc/App.config\";\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport AddRestaurantLink from \"./AddRestaurantLink\";\r\n// \"@fortawesome/react-fontawesome\": \"^0.1.14\",\r\nimport CreateRestaurantComponent from \"../components/CreateRestaurantComponent\";\r\n\r\nconst DataTable = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 50;\r\n\r\n    const headers = [\r\n        { name: \"Name\", field: \"name\", sortable: true },\r\n        { name: \"Average Rating\", field: \"averageRating\", sortable: false },\r\n        { name: \"Tags\", field: \"tags\", sortable: true },\r\n        { name: \"City\", field: \"city\", sortable: true },\r\n        {name: \"Restaurant Actions\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n              // RestaurantService.getRestaurant()\r\n            // fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n/*            fetch(\"http://localhost:8080/restaurant\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    hideLoader();\r\n                    setComments(json);\r\n                });*/\r\n\r\n            RestaurantService.getRestaurant(0).then(res => res.data)\r\n                .then((data) => {\r\n                    hideLoader();\r\n                    setComments((comments) => data);\r\n                    // console.log(data);\r\n                });\r\n\r\n\r\n\r\n            // RestaurantService.getRestaurant().then((res) =>\r\n            // {\r\n            //     console.log(typeof res.data)\r\n            //     setComments(res.data)\r\n            //     // this.setState({restaurants: res.data});x\r\n            // });\r\n\r\n\r\n\r\n        };\r\n\r\n        // console.log(\"comments: \"+ typeof comments);\r\n\r\n        getData();\r\n    }, [hideLoader, showLoader, comments]);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        // console.log(\"computedComments: \"+ typeof computedComments);\r\n\r\n\r\n        //Search comments\r\n        if (search) {\r\n            // console.log(\"search = \"+search);\r\n            // computedComments = computedComments.filter(\r\n           computedComments = comments.filter(\r\n                comment =>\r\n                    comment.tags.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.averageRating.toString().includes(search) ||\r\n                    comment.city.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n            {/*<Header title=\"Building a data table in react\" />*/}\r\n            <h2 className=\"text-center\">Restaurant List</h2>\r\n            {/*<ExternalInfo page=\"datatable\" />*/}\r\n            <br/>\r\n\r\n            <div className=\"row w-100\">\r\n                <div className=\"col mb-3 col-12 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n\r\n\r\n                            />\r\n                        </div>\r\n{/*                        <div className=\"col-md-6 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(prevState => value);\r\n                                    console.log(\"value of value: \" + value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>*/}\r\n                    </div>\r\n\r\n                    {/*<div className=\"col-md-6 d-flex flex-row-reverse\">*/}\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {/*<button className=\"btn btn-primary\" onClick={this.addRestaurant}>Add Restaurant</button>*/}\r\n\r\n                        <AddRestaurantLink/>\r\n\r\n\r\n                        <Search\r\n                            onSearch={value => {\r\n                                setSearch(prevState => value);\r\n                                setCurrentPage(1);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <table className=\"table table-striped\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                        {commentsData.map(comment => (\r\n                            <tr>\r\n                                <th scope=\"row\" key={comment.id}>\r\n                                    {comment.name}\r\n                                </th>\r\n                                {/*<td>{comment.name}</td>*/}\r\n                                <td>{comment.averageRating}</td>\r\n                                <td>{comment.tags}</td>\r\n                                <td>{comment.city}</td>\r\n                                <td>\r\n                                    <button onClick={() => this.editRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\">Update\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.deleteRestaurant(comment.id)}\r\n                                            className=\"btn btn-danger\"> Delete\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.viewRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\"> View\r\n                                    </button>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {hideLoader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\HeaderComponent.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FoodComponents.js",["157"],"import React, {Component} from 'react';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass FoodComponents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foods: []\r\n        }\r\n        this.addFood = this.addFood.bind(this);\r\n        this.editFood = this.editFood.bind(this);\r\n        this.deleteFood = this.deleteFood.bind(this);\r\n    }\r\n\r\n    deleteFood(id) {\r\n        FoodService.deleteFood(id).then(res => {\r\n            this.setState({foods: this.state.foods.filter(food => food.id !== id)});\r\n        });\r\n    }\r\n\r\n    viewRestaurant(id){\r\n        this.props.history.push(`/view-food/${id}`);\r\n    }\r\n\r\n    editFood(id) {\r\n        this.props.history.push(`/add-food/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FoodService.getFood().then((res) => {\r\n            this.setState({foods: res.data});\r\n        });\r\n    }\r\n\r\n    addFood() {\r\n        this.props.history.push('/add-food/add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Food List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addFood}>Add Food</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Restaurant ID</th>\r\n                            <th>Name</th>\r\n                            <th>Cost</th>\r\n                            <th>Image</th>\r\n                            <th>Summary</th>\r\n                            <th>Special</th>\r\n                            <th>Is Active</th>\r\n                            <th>Category</th>\r\n                            <th>Restaurant Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.foods.map(\r\n                                food =>\r\n                                    <tr key= {food.id}>\r\n                                        <td> {food.id}</td>\r\n                                        <td> {food.restaurantID}</td>\r\n                                        <td> {food.name}</td>\r\n                                        <td> {food.cost}</td>\r\n                                        <td> {food.image}</td>\r\n                                        <td> {food.summary}</td>\r\n                                        <td> {food.special}</td>\r\n                                        <td> {food.isActive}</td>\r\n                                        <td> {food.category}</td>\r\n                                        <td>\r\n                                            <button onClick={() => this.editFood(food.id)}\r\n                                                    className=\"btn btn-info\">Update\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.deleteFood(food.id)}\r\n                                                    className=\"btn btn-danger\"> Delete\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.viewRestaurant(food.id)}\r\n                                                    className=\"btn btn-info\"> View\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FoodComponents;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\FooterComponent.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\RestaurantsComponents.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\UpdateRestaurant.js",["158"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass UpdateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.updateRestaurant = this.updateRestaurant.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestaurantService.getRestaurantById(this.state.id).then( (res) =>{\r\n            let restaurant = res.data;\r\n            this.setState({name: restaurant.name, averageRating: restaurant.averageRating, tags: restaurant.tags,\r\n                isActive: restaurant.isActive, priceCategory: restaurant.priceCategory, streetAddress: restaurant.streetAddress,\r\n                city: restaurant.city, state: restaurant.state, zipCode: restaurant.zipCode});\r\n        });\r\n    }\r\n\r\n    updateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {name: this.state.name, averageRating: this.state.averageRating, tags: this.state.tags,\r\n            isActive: this.state.isActive, priceCategory: this.state.priceCategory, streetAddress: this.state.streetAddress,\r\n            city: this.state.city, state: this.state.state, zipCode: this.state.zipCode};\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n        RestaurantService.updateRestaurant(restaurant,this.state.id).then(res => {\r\n            this.props.history.push('/restaurant');\r\n        });\r\n\r\n        // RestaurantService.createRestaurant(restaurant).then(res =>{\r\n        //     this.props.history.push('/restaurant');\r\n        // });\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/restaurant');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Restaurant</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.updateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateRestaurantComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateRestaurantComponent.js",["159"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass CreateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.saveOrUpdateRestaurant = this.saveOrUpdateRestaurant.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            RestaurantService.getRestaurantById(this.state.id).then((res) => {\r\n                let restaurant = res.data;\r\n                this.setState({\r\n                    name: restaurant.name,\r\n                    averageRating: restaurant.averageRating,\r\n                    tags: restaurant.tags,\r\n                    isActive: restaurant.isActive,\r\n                    priceCategory: restaurant.priceCategory,\r\n                    streetAddress: restaurant.streetAddress,\r\n                    city: restaurant.city,\r\n                    state: restaurant.state,\r\n                    zipCode: restaurant.zipCode\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {\r\n            name: this.state.name,\r\n            averageRating: this.state.averageRating,\r\n            tags: this.state.tags,\r\n            isActive: this.state.isActive,\r\n            priceCategory: this.state.priceCategory,\r\n            streetAddress: this.state.streetAddress,\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            zipCode: this.state.zipCode\r\n        };\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            RestaurantService.createRestaurant(restaurant).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        } else {\r\n            RestaurantService.updateRestaurant(restaurant, this.state.id).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Restaurant</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Restaurant</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateRestaurantComponent.propTypes = {};\r\n\r\nexport default CreateRestaurantComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\CreateFoodComponent.js",["160"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass CreateFoodComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            restaurantID: '',\r\n            name: '',\r\n            cost: '',\r\n            image: '',\r\n            summary: '',\r\n            special: '',\r\n            isActive: '',\r\n            category: ''\r\n\r\n        }\r\n        this.changeRestaurantIDHandler = this.changeRestaurantIDHandler.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeCostHandler = this.changeCostHandler.bind(this);\r\n        this.changeImageHandler = this.changeImageHandler.bind(this);\r\n        this.changeSummaryHandler = this.changeSummaryHandler.bind(this);\r\n        this.changeSpecialHandler = this.changeSpecialHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changeCategoryHandler = this.changeCategoryHandler.bind(this);\r\n\r\n        this.saveOrUpdateFood = this.saveOrUpdateFood.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            FoodService.getFoodById(this.state.id).then((res) => {\r\n                let food = res.data;\r\n                this.setState({\r\n                    restaurantID: food.restaurantID,\r\n                    name: food.name,\r\n                    cost: food.cost,\r\n                    image: food.image,\r\n                    summary: food.summary,\r\n                    special: food.special,\r\n                    isActive: food.isActive,\r\n                    category: food.category\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateFood = (e) => {\r\n        e.preventDefault();\r\n        let food = {\r\n            restaurantID: this.state.restaurantID,\r\n            name: this.state.name,\r\n            cost: this.state.cost,\r\n            image: this.state.image,\r\n            summary: this.state.summary,\r\n            special: this.state.special,\r\n            isActive: this.state.isActive,\r\n            category: this.state.category\r\n        };\r\n        console.log('food => ' + JSON.stringify(food));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            FoodService.createFood(food).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        } else {\r\n            FoodService.updateFood(food, this.state.id).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeRestaurantIDHandler = (event) => {\r\n        this.setState({restaurantID: event.target.value});\r\n    }\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeCostHandler = (event) => {\r\n        this.setState({cost: event.target.value});\r\n    }\r\n    changeImageHandler = (event) => {\r\n        this.setState({image: event.target.value});\r\n    }\r\n    changeSummaryHandler = (event) => {\r\n        this.setState({summary: event.target.value});\r\n    }\r\n    changeSpecialHandler = (event) => {\r\n        this.setState({special: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changeCategoryHandler = (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/food');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Food</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Food</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant ID:</label>\r\n                                        <input placeholder=\"Restaurant ID\" name=\"restaurantID\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.restaurantID}\r\n                                               onChange={this.changeRestaurantIDHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Food Name:</label>\r\n                                        <input placeholder=\"Food Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cost:</label>\r\n                                        <input placeholder=\"Cost\" name=\"cost\" className=\"form-control\"\r\n                                               value={this.state.cost} onChange={this.changeCostHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Image:</label>\r\n                                        <input placeholder=\"Image\" name=\"image\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.image}\r\n                                               onChange={this.changeImageHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Summary:</label>\r\n                                        <input placeholder=\"Summary\" name=\"summary\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.summary}\r\n                                               onChange={this.changeSummaryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Special:</label>\r\n                                        <input placeholder=\"Special\" name=\"special\" className=\"form-control\"\r\n                                               value={this.state.special} onChange={this.changeSpecialHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category:</label>\r\n                                        <input placeholder=\"Category\" name=\"category\" className=\"form-control\"\r\n                                               value={this.state.category} onChange={this.changeCategoryHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateFood}>Save\r\n                                    </button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFoodComponent.propTypes = {};\r\n\r\nexport default CreateFoodComponent;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Account.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UserInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\UpdateAccount.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\AccountComponents\\Login.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewFoodComponent.jsx",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\components\\ViewRestaurantComponent.jsx",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\Header.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\AddRestaurantLink.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\ExternalInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\RestaurantService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\DataTable.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\App.config.js",["161"],"const GIT_REPO =\r\n    \"https://github.com/codegeous/react-component-depot/tree/master/src/\";\r\nconst YOUTUBE_BASE = \"https://youtu.be/\";\r\n\r\nexport default {\r\n    api: process.env.REACT_APP_API_ENDPOINT,\r\n\r\n    GOOGLE: {\r\n        GAPI_KEY: \"\",\r\n        reCaptcha: process.env.REACT_APP_RECAPCTHA_SITE_TOKEN,\r\n        GA_TRACKING_CODE: process.env.REACT_APP_GA_TRACKING_CODE,\r\n    },\r\n\r\n    hCaptchaSiteToken: process.env.REACT_APP_HCAPTCHA_SITE_TOKEN,\r\n\r\n    links: {\r\n        customGoogleMaps: {\r\n            tutorial: `${YOUTUBE_BASE}xUsn2nj4fy0`,\r\n            code: `${GIT_REPO}pages/GoogleMaps/CustomStyle/index.js`,\r\n        },\r\n        buttonLoaderHooks: {\r\n            tutorial: `${YOUTUBE_BASE}nCEnqQABC5A`,\r\n            code: `${GIT_REPO}pages/ButtonLoadingSpinner/index.js`,\r\n        },\r\n        otpBox: {\r\n            tutorial: `${YOUTUBE_BASE}qf56frPk5lA`,\r\n            code: `${GIT_REPO}pages/OTPBox/index.js`,\r\n        },\r\n        contactListCRUD: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/ContactList/index.js`,\r\n        },\r\n        showAndHideElements: {\r\n            tutorial: `${YOUTUBE_BASE}jRxoO-Zd0pQ`,\r\n            code: `${GIT_REPO}pages/ReactBasics/ShowAndHide/index.js`,\r\n        },\r\n        scrollIndicator: {\r\n            tutorial: `${YOUTUBE_BASE}-rYmnXV6sYw`,\r\n            code: `${GIT_REPO}components/ScrollIndicator/index.js`,\r\n        },\r\n        floatingYoutubePlayer: {\r\n            tutorial: `${YOUTUBE_BASE}lT4uJI6TXAg`,\r\n            code: `${GIT_REPO}components/YoutubePlayer/index.js`,\r\n        },\r\n        signup: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/Signup/index.js`,\r\n        },\r\n        hooks: {\r\n            tutorial: `${YOUTUBE_BASE}fT7jBMG7GIM`,\r\n            code: `${GIT_REPO}pages/HooksDemo/index.js`,\r\n        },\r\n        datatable: {\r\n            tutorial: `${YOUTUBE_BASE}emX5KvZ6Hbo`,\r\n            code: `${GIT_REPO}pages/DataTable/index.js`,\r\n        },\r\n        batteryStatus: {\r\n            tutorial: `${YOUTUBE_BASE}50cOgnVmflE`,\r\n            code: `${GIT_REPO}pages/BatteryStatus/index.js`,\r\n        },\r\n        fileupload: {\r\n            tutorial: `${YOUTUBE_BASE}_XD5ko7Fy9E`,\r\n            code: `${GIT_REPO}pages/FileUpload/index.js`,\r\n        },\r\n        geoLocation: {\r\n            tutorial: `${YOUTUBE_BASE}TID8Z29je5o`,\r\n            code: `${GIT_REPO}pages/GeoLocation/index.js`,\r\n        },\r\n        infniteScrolling: {\r\n            tutorial: `${YOUTUBE_BASE}8nFNxnjoTZ4`,\r\n            code: `${GIT_REPO}pages/InfiniteScrolling/index.js`,\r\n        },\r\n        recaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}e_vMoPCBfqU`,\r\n            code: `${GIT_REPO}pages/ReCaptcha/index.js`,\r\n        },\r\n        hcaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}KcLeXxlkqf0`,\r\n            code: `${GIT_REPO}pages/HCaptcha/index.js`,\r\n        },\r\n        autocomplete: {\r\n            tutorial: `${YOUTUBE_BASE}G2QyeafA3gw`,\r\n            code: `${GIT_REPO}pages/CountrySearch/index.js`,\r\n        },\r\n        searchFilter: {\r\n            tutorial: `${YOUTUBE_BASE}aBWwJ4ibpps`,\r\n            code: `${GIT_REPO}pages/SearchFilter/index.js`,\r\n        },\r\n        accordion: {\r\n            tutorial: `${YOUTUBE_BASE}AjQctXfmOqw`,\r\n            code: `${GIT_REPO}pages/AccordionDemo/index.js`,\r\n        },\r\n        leafletBasic: {\r\n            tutorial: `${YOUTUBE_BASE}i9oX1upSKjI`,\r\n            code: `${GIT_REPO}pages/Leaflet/basic.js`,\r\n        },\r\n        leafletMarker: {\r\n            tutorial: `${YOUTUBE_BASE}UNSYoW3gkDc`,\r\n            code: `${GIT_REPO}pages/Leaflet/markers.js`,\r\n        },\r\n        leafletCurrentLocation: {\r\n            tutorial: `${YOUTUBE_BASE}7jWYLirwt0k`,\r\n            code: `${GIT_REPO}pages/Leaflet/currentLocation.js`,\r\n        },\r\n        leafletDraw: {\r\n            tutorial: `${YOUTUBE_BASE}Bp_6MkKSOQE`,\r\n            code: `${GIT_REPO}pages/Leaflet/draw.js`,\r\n        },\r\n        treeList: {\r\n            tutorial: `${YOUTUBE_BASE}uRSzyVubap4`,\r\n            code: `${GIT_REPO}pages/TreeList/index.js`,\r\n        },\r\n        fileDownloader: {\r\n            tutorial: `${YOUTUBE_BASE}0AS9Gfd1j5s`,\r\n            code: `${GIT_REPO}pages/FileDownloader/index.js`,\r\n        },\r\n        imageZoom: {\r\n            tutorial: `${YOUTUBE_BASE}uhgQFqr9ezQ`,\r\n            code: `${GIT_REPO}pages/ImageZoom/index.js`,\r\n        },\r\n        starRating: {\r\n            tutorial: `${YOUTUBE_BASE}nErdlbLWqtA`,\r\n            code: `${GIT_REPO}pages/Rating/index.js`,\r\n        },\r\n        leafletStaticMap: {\r\n            tutorial: `${YOUTUBE_BASE}sz_FaLpMNZc`,\r\n            code: `${GIT_REPO}pages/Leaflet/StaticMap.js`,\r\n        },\r\n        leafletPrint: {\r\n            tutorial: `${YOUTUBE_BASE}mhGqgY2l-ik`,\r\n            code: `${GIT_REPO}pages/Leaflet/Print.js`,\r\n        },\r\n        tabs: {\r\n            tutorial: `${YOUTUBE_BASE}MLYH-o_EdaI`,\r\n            code: `${GIT_REPO}pages/SimpleTabs/index.js`,\r\n        },\r\n        dnd: {\r\n            tutorial: `${YOUTUBE_BASE}O2dTW3uNAeQ`,\r\n            code: `${GIT_REPO}pages/TeamSelection/index.js`,\r\n        },\r\n    },\r\n    youtubeVideos: [\r\n        {\r\n            title: \"Full page loading spinner for API calls in ReactJS with Redux\",\r\n            id: \"vCs50MV-TbM\",\r\n        },\r\n        {\r\n            title: \"File Upload with progress bar in React JS and axios\",\r\n            id: \"Ti8QNiRRzOA\",\r\n        },\r\n        {\r\n            title: \"Add loading spinner for buttons in reactjs\",\r\n            id: \"vgDObZGhQuw\",\r\n        },\r\n        {\r\n            title: \"Display fallback image for a broken image link in reactjs \",\r\n            id: \"90P1_xCaim4\",\r\n        },\r\n        {\r\n            title: \"Material style preloader for image tag in react js\",\r\n            id: \"GBHBjv6xfY4\",\r\n        },\r\n        {\r\n            title: \"Building a search filter in reactjs\",\r\n            id: \"RM_nXOyHwN0\",\r\n        },\r\n    ],\r\n};\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useFullPageLoader.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\UserService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\FoodService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\services\\AuthenticationService.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\layout.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\hoc\\withExternalInfo.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\hooks\\useGAEventTracker.js",["162"],"import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst useGAEventTracker = (category = \"Category\") => {\r\n    const trackEvent = (action = \"action\", label = \"label\") => {\r\n        ReactGA.event({\r\n            category,\r\n            action,\r\n            label,\r\n        });\r\n    };\r\n\r\n    return trackEvent;\r\n};\r\n\r\nexport default useGAEventTracker;\r\n","C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Pagination.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Header.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\Search.js",[],"C:\\Users\\marvi\\WebstormProjects\\SushiBytesTeamSite\\AdminPortal\\admin_portal_react\\src\\reactpagination\\components\\FullPageLoader.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":12},{"ruleId":"167","severity":1,"message":"171","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":23},{"ruleId":"167","severity":1,"message":"172","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":24},{"ruleId":"167","severity":1,"message":"173","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"174","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"175","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":17},{"ruleId":"167","severity":1,"message":"176","line":10,"column":8,"nodeType":"169","messageId":"170","endLine":10,"endColumn":33},{"ruleId":"167","severity":1,"message":"177","line":14,"column":12,"nodeType":"169","messageId":"170","endLine":14,"endColumn":18},{"ruleId":"167","severity":1,"message":"178","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"179","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"179","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"179","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"180","severity":1,"message":"181","line":5,"column":1,"nodeType":"182","endLine":168,"endColumn":3},{"ruleId":"167","severity":1,"message":"183","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":13},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FooterComponent' is defined but never used.","'UpdateRestaurant' is defined but never used.","'Header' is defined but never used.","'ExternalInfo' is defined but never used.","'AppConfig' is defined but never used.","'CreateRestaurantComponent' is defined but never used.","'loader' is assigned a value but never used.","'RestaurantService' is defined but never used.","'PropTypes' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]