[{"/home/damocles/AdminPortal/admin_portal_react/src/index.js":"1","/home/damocles/AdminPortal/admin_portal_react/src/reportWebVitals.js":"2","/home/damocles/AdminPortal/admin_portal_react/src/App.js":"3","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/RestaurantDataTable.js":"4","/home/damocles/AdminPortal/admin_portal_react/src/components/HeaderComponent.js":"5","/home/damocles/AdminPortal/admin_portal_react/src/components/RestaurantsComponents.js":"6","/home/damocles/AdminPortal/admin_portal_react/src/components/FooterComponent.js":"7","/home/damocles/AdminPortal/admin_portal_react/src/components/FoodComponents.js":"8","/home/damocles/AdminPortal/admin_portal_react/src/components/UpdateRestaurant.js":"9","/home/damocles/AdminPortal/admin_portal_react/src/components/CreateRestaurantComponent.js":"10","/home/damocles/AdminPortal/admin_portal_react/src/components/CreateFoodComponent.js":"11","/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/Login.js":"12","/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/UserInfo.js":"13","/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/UpdateAccount.js":"14","/home/damocles/AdminPortal/admin_portal_react/src/components/ViewRestaurantComponent.jsx":"15","/home/damocles/AdminPortal/admin_portal_react/src/components/ViewFoodComponent.jsx":"16","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/FoodMenuForm.js":"17","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/Restaurants.js":"18","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/Header.js":"19","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/AddRestaurantLink.js":"20","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/DataTable.js":"21","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/hooks/useFullPageLoader.js":"22","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/ExternalInfo.js":"23","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/hoc/App.config.js":"24","/home/damocles/AdminPortal/admin_portal_react/src/services/RestaurantService.js":"25","/home/damocles/AdminPortal/admin_portal_react/src/services/FoodService.js":"26","/home/damocles/AdminPortal/admin_portal_react/src/services/AuthenticationService.js":"27","/home/damocles/AdminPortal/admin_portal_react/src/services/UserService.js":"28","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/RestaurantForm.js":"29","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/useForm.js":"30","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/GridSingleLine.js":"31","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/AlignList.js":"32","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/PageHeader.js":"33","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/Popup.js":"34","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/ConfirmDialog.js":"35","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Controls.js":"36","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/useTable.js":"37","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Notification.js":"38","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/services/employeeService.js":"39","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/layout.js":"40","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Search.js":"41","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Pagination.js":"42","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Header.js":"43","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/FullPageLoader.js":"44","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/hoc/withExternalInfo.js":"45","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/hooks/useGAEventTracker.js":"46","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/input.js":"47","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/RadioGroup.js":"48","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Checkbox.js":"49","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Select.js":"50","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/DatePicker.js":"51","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/ActionButton.js":"52","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Button.js":"53","/home/damocles/AdminPortal/admin_portal_react/src/components/Navigation/NavigationDrawer.js":"54","/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/Account.js":"55","/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/UpdateAccountRole.js":"56","/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/UpdateAccountFields.js":"57"},{"size":547,"mtime":1622201980523,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":1622201980527,"results":"60","hashOfConfig":"59"},{"size":3738,"mtime":1623054709144,"results":"61","hashOfConfig":"59"},{"size":7653,"mtime":1622202040923,"results":"62","hashOfConfig":"59"},{"size":771,"mtime":1622202722112,"results":"63","hashOfConfig":"59"},{"size":4398,"mtime":1622201980523,"results":"64","hashOfConfig":"59"},{"size":446,"mtime":1622201980523,"results":"65","hashOfConfig":"59"},{"size":4045,"mtime":1622201980523,"results":"66","hashOfConfig":"59"},{"size":8596,"mtime":1622201980523,"results":"67","hashOfConfig":"59"},{"size":9671,"mtime":1622202040923,"results":"68","hashOfConfig":"59"},{"size":8696,"mtime":1622201980523,"results":"69","hashOfConfig":"59"},{"size":3878,"mtime":1622203091905,"results":"70","hashOfConfig":"59"},{"size":3311,"mtime":1622203118947,"results":"71","hashOfConfig":"59"},{"size":8690,"mtime":1622203466235,"results":"72","hashOfConfig":"59"},{"size":2949,"mtime":1622201980523,"results":"73","hashOfConfig":"59"},{"size":2620,"mtime":1622201980523,"results":"74","hashOfConfig":"59"},{"size":6412,"mtime":1622202040923,"results":"75","hashOfConfig":"59"},{"size":11218,"mtime":1622202040923,"results":"76","hashOfConfig":"59"},{"size":834,"mtime":1622201980523,"results":"77","hashOfConfig":"59"},{"size":1915,"mtime":1622202040923,"results":"78","hashOfConfig":"59"},{"size":156,"mtime":1622201980523,"results":"79","hashOfConfig":"59"},{"size":396,"mtime":1622201980527,"results":"80","hashOfConfig":"59"},{"size":1560,"mtime":1622201980523,"results":"81","hashOfConfig":"59"},{"size":5895,"mtime":1622201980527,"results":"82","hashOfConfig":"59"},{"size":925,"mtime":1622202040923,"results":"83","hashOfConfig":"59"},{"size":606,"mtime":1622201980527,"results":"84","hashOfConfig":"59"},{"size":253,"mtime":1622238835382,"results":"85","hashOfConfig":"59"},{"size":1261,"mtime":1623059074622,"results":"86","hashOfConfig":"59"},{"size":7261,"mtime":1622202040923,"results":"87","hashOfConfig":"59"},{"size":1581,"mtime":1622202040923,"results":"88","hashOfConfig":"59"},{"size":3059,"mtime":1622202040923,"results":"89","hashOfConfig":"59"},{"size":4518,"mtime":1622202040923,"results":"90","hashOfConfig":"59"},{"size":1395,"mtime":1622202040923,"results":"91","hashOfConfig":"59"},{"size":1344,"mtime":1622202040923,"results":"92","hashOfConfig":"59"},{"size":2152,"mtime":1622202040923,"results":"93","hashOfConfig":"59"},{"size":401,"mtime":1622202040923,"results":"94","hashOfConfig":"59"},{"size":3933,"mtime":1622202040923,"results":"95","hashOfConfig":"59"},{"size":945,"mtime":1622202040923,"results":"96","hashOfConfig":"59"},{"size":3342,"mtime":1622202040923,"results":"97","hashOfConfig":"59"},{"size":603,"mtime":1622201980527,"results":"98","hashOfConfig":"59"},{"size":588,"mtime":1622201980527,"results":"99","hashOfConfig":"59"},{"size":1603,"mtime":1622201980523,"results":"100","hashOfConfig":"59"},{"size":1364,"mtime":1622201980523,"results":"101","hashOfConfig":"59"},{"size":305,"mtime":1622201980523,"results":"102","hashOfConfig":"59"},{"size":417,"mtime":1622201980527,"results":"103","hashOfConfig":"59"},{"size":362,"mtime":1622201980527,"results":"104","hashOfConfig":"59"},{"size":601,"mtime":1622202040923,"results":"105","hashOfConfig":"59"},{"size":797,"mtime":1622202040923,"results":"106","hashOfConfig":"59"},{"size":732,"mtime":1622202040923,"results":"107","hashOfConfig":"59"},{"size":878,"mtime":1622202040923,"results":"108","hashOfConfig":"59"},{"size":866,"mtime":1622202040923,"results":"109","hashOfConfig":"59"},{"size":846,"mtime":1622202040923,"results":"110","hashOfConfig":"59"},{"size":709,"mtime":1622202040923,"results":"111","hashOfConfig":"59"},{"size":7404,"mtime":1622202635298,"results":"112","hashOfConfig":"59"},{"size":3731,"mtime":1623059684891,"results":"113","hashOfConfig":"59"},{"size":1554,"mtime":1623059395175,"results":"114","hashOfConfig":"59"},{"size":8517,"mtime":1623062024157,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1pzhrnu",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"118"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"201","usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/damocles/AdminPortal/admin_portal_react/src/index.js",[],["245","246"],"/home/damocles/AdminPortal/admin_portal_react/src/reportWebVitals.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/App.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/RestaurantDataTable.js",["247","248","249","250","251"],"import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { TableHeader, Pagination, Search } from \"./components/DataTable\";\r\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\r\nimport ExternalInfo from \"./components/ExternalInfo\";\r\nimport AppConfig from \"./components/hoc/App.config\";\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport AddRestaurantLink from \"./AddRestaurantLink\";\r\n// \"@fortawesome/react-fontawesome\": \"^0.1.14\",\r\nimport CreateRestaurantComponent from \"../components/CreateRestaurantComponent\";\r\n\r\nconst DataTable = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 50;\r\n\r\n    const headers = [\r\n        { name: \"Name\", field: \"name\", sortable: true },\r\n        { name: \"Average Rating\", field: \"averageRating\", sortable: false },\r\n        { name: \"Tags\", field: \"tags\", sortable: true },\r\n        { name: \"City\", field: \"city\", sortable: true },\r\n        {name: \"Restaurant Actions\"}\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n              // RestaurantService.getRestaurant()\r\n            // fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n/*            fetch(\"http://localhost:8080/restaurant\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    hideLoader();\r\n                    setComments(json);\r\n                });*/\r\n\r\n            RestaurantService.getRestaurant(0).then(res => res.data)\r\n                .then((data) => {\r\n                    hideLoader();\r\n                    setComments((comments) => data);\r\n                    // console.log(data);\r\n                });\r\n\r\n\r\n            // RestaurantService.getRestaurant().then((res) =>\r\n            // {\r\n            //     console.log(typeof res.data)\r\n            //     setComments(res.data)\r\n            //     // this.setState({restaurants: res.data});x\r\n            // });\r\n\r\n        };\r\n\r\n        // console.log(\"comments: \"+ typeof comments);\r\n\r\n        getData();\r\n    }, [hideLoader, showLoader, comments]);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        // console.log(\"computedComments: \"+ typeof computedComments);\r\n\r\n\r\n        //Search comments\r\n        if (search) {\r\n            // console.log(\"search = \"+search);\r\n            // computedComments = computedComments.filter(\r\n           computedComments = comments.filter(\r\n                comment =>\r\n                    comment.tags.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.averageRating.toString().includes(search) ||\r\n                    comment.city.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n            {/*<Header title=\"Building a data table in react\" />*/}\r\n            <h2 className=\"text-center\">Restaurant List</h2>\r\n            {/*<ExternalInfo page=\"datatable\" />*/}\r\n            <br/>\r\n\r\n            <div className=\"row w-100\">\r\n                <div className=\"col mb-3 col-12 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n\r\n\r\n                            />\r\n                        </div>\r\n{/*                        <div className=\"col-md-6 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(prevState => value);\r\n                                    console.log(\"value of value: \" + value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>*/}\r\n                    </div>\r\n\r\n                    {/*<div className=\"col-md-6 d-flex flex-row-reverse\">*/}\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {/*<button className=\"btn btn-primary\" onClick={this.addRestaurant}>Add Restaurant</button>*/}\r\n\r\n                        <AddRestaurantLink/>\r\n\r\n\r\n                        <Search\r\n                            onSearch={value => {\r\n                                setSearch(prevState => value);\r\n                                setCurrentPage(1);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <table className=\"table table-striped\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                        {commentsData.map(comment => (\r\n                            <tr>\r\n                                <th scope=\"row\" key={comment.id}>\r\n                                    {comment.name}\r\n                                </th>\r\n                                {/*<td>{comment.name}</td>*/}\r\n                                <td>{comment.averageRating}</td>\r\n                                <td>{comment.tags}</td>\r\n                                <td>{comment.city}</td>\r\n                                <td>\r\n                                    <button onClick={() => this.editRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\">Update\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.deleteRestaurant(comment.id)}\r\n                                            className=\"btn btn-danger\"> Delete\r\n                                    </button>\r\n                                    <button style={{margin: \"5px\"}}\r\n                                            onClick={() => this.viewRestaurant(comment.id)}\r\n                                            className=\"btn btn-info\"> View\r\n                                    </button>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {hideLoader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/components/HeaderComponent.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/RestaurantsComponents.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/FooterComponent.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/FoodComponents.js",["252"],"import React, {Component} from 'react';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass FoodComponents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            foods: []\r\n        }\r\n        this.addFood = this.addFood.bind(this);\r\n        this.editFood = this.editFood.bind(this);\r\n        this.deleteFood = this.deleteFood.bind(this);\r\n    }\r\n\r\n    deleteFood(id) {\r\n        FoodService.deleteFood(id).then(res => {\r\n            this.setState({foods: this.state.foods.filter(food => food.id !== id)});\r\n        });\r\n    }\r\n\r\n    viewRestaurant(id){\r\n        this.props.history.push(`/view-food/${id}`);\r\n    }\r\n\r\n    editFood(id) {\r\n        this.props.history.push(`/add-food/${id}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FoodService.getFood().then((res) => {\r\n            this.setState({foods: res.data});\r\n        });\r\n    }\r\n\r\n    addFood() {\r\n        this.props.history.push('/add-food/add');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Food List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addFood}>Add Food</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Restaurant ID</th>\r\n                            <th>Name</th>\r\n                            <th>Cost</th>\r\n                            <th>Image</th>\r\n                            <th>Summary</th>\r\n                            <th>Special</th>\r\n                            <th>Is Active</th>\r\n                            <th>Category</th>\r\n                            <th>Restaurant Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            this.state.foods.map(\r\n                                food =>\r\n                                    <tr key= {food.id}>\r\n                                        <td> {food.id}</td>\r\n                                        <td> {food.restaurantID}</td>\r\n                                        <td> {food.name}</td>\r\n                                        <td> {food.cost}</td>\r\n                                        <td> {food.image}</td>\r\n                                        <td> {food.summary}</td>\r\n                                        <td> {food.special}</td>\r\n                                        <td> {food.isActive}</td>\r\n                                        <td> {food.category}</td>\r\n                                        <td>\r\n                                            <button onClick={() => this.editFood(food.id)}\r\n                                                    className=\"btn btn-info\">Update\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.deleteFood(food.id)}\r\n                                                    className=\"btn btn-danger\"> Delete\r\n                                            </button>\r\n                                            <button style={{margin: \"5px\"}}\r\n                                                    onClick={() => this.viewRestaurant(food.id)}\r\n                                                    className=\"btn btn-info\"> View\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                            )\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FoodComponents;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/components/UpdateRestaurant.js",["253"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass UpdateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.updateRestaurant = this.updateRestaurant.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        RestaurantService.getRestaurantById(this.state.id).then( (res) =>{\r\n            let restaurant = res.data;\r\n            this.setState({name: restaurant.name, averageRating: restaurant.averageRating, tags: restaurant.tags,\r\n                isActive: restaurant.isActive, priceCategory: restaurant.priceCategory, streetAddress: restaurant.streetAddress,\r\n                city: restaurant.city, state: restaurant.state, zipCode: restaurant.zipCode});\r\n        });\r\n    }\r\n\r\n    updateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {name: this.state.name, averageRating: this.state.averageRating, tags: this.state.tags,\r\n            isActive: this.state.isActive, priceCategory: this.state.priceCategory, streetAddress: this.state.streetAddress,\r\n            city: this.state.city, state: this.state.state, zipCode: this.state.zipCode};\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n        RestaurantService.updateRestaurant(restaurant,this.state.id).then(res => {\r\n            this.props.history.push('/restaurant');\r\n        });\r\n\r\n        // RestaurantService.createRestaurant(restaurant).then(res =>{\r\n        //     this.props.history.push('/restaurant');\r\n        // });\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/restaurant');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Restaurant</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.updateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateRestaurantComponent;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/components/CreateRestaurantComponent.js",["254"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RestaurantService from \"../services/RestaurantService\";\r\n\r\nclass CreateRestaurantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            priceCategory: '',\r\n            averageRating: '',\r\n            tags: '',\r\n            isActive: '',\r\n            streetAddress: '',\r\n            city: '',\r\n            state: '',\r\n            zipCode: ''\r\n\r\n        }\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeAverageRatingHandler = this.changeAverageRatingHandler.bind(this);\r\n        this.changeTagsHandler = this.changeTagsHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changePriceCategoryHandler = this.changePriceCategoryHandler.bind(this);\r\n        this.changeStreetAddressHandler = this.changeStreetAddressHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.changeStateHandler = this.changeStateHandler.bind(this);\r\n        this.changeZipCodeHandler = this.changeZipCodeHandler.bind(this);\r\n\r\n        this.saveOrUpdateRestaurant = this.saveOrUpdateRestaurant.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            RestaurantService.getRestaurantById(this.state.id).then((res) => {\r\n                let restaurant = res.data;\r\n                this.setState({\r\n                    name: restaurant.name,\r\n                    averageRating: restaurant.averageRating,\r\n                    tags: restaurant.tags,\r\n                    isActive: restaurant.isActive,\r\n                    priceCategory: restaurant.priceCategory,\r\n                    streetAddress: restaurant.streetAddress,\r\n                    city: restaurant.city,\r\n                    state: restaurant.state,\r\n                    zipCode: restaurant.zipCode\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        let restaurant = {\r\n            name: this.state.name,\r\n            averageRating: this.state.averageRating,\r\n            tags: this.state.tags,\r\n            isActive: this.state.isActive,\r\n            priceCategory: this.state.priceCategory,\r\n            streetAddress: this.state.streetAddress,\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            zipCode: this.state.zipCode\r\n        };\r\n        console.log('restaurant => ' + JSON.stringify(restaurant));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            RestaurantService.createRestaurant(restaurant).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        } else {\r\n            RestaurantService.updateRestaurant(restaurant, this.state.id).then(res => {\r\n                this.props.history.push('/');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeAverageRatingHandler = (event) => {\r\n        this.setState({averageRating: event.target.value});\r\n    }\r\n    changeTagsHandler = (event) => {\r\n        this.setState({tags: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changePriceCategoryHandler = (event) => {\r\n        this.setState({priceCategory: event.target.value});\r\n    }\r\n    changeStreetAddressHandler = (event) => {\r\n        this.setState({streetAddress: event.target.value});\r\n    }\r\n    changeCityHandler = (event) => {\r\n        this.setState({city: event.target.value});\r\n    }\r\n    changeStateHandler = (event) => {\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changeZipCodeHandler = (event) => {\r\n        this.setState({zipCode: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Restaurant</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Restaurant</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant Name:</label>\r\n                                        <input placeholder=\"Restaurant Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Average Rating:</label>\r\n                                        <input placeholder=\"Average Rating\" name=\"averageRating\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.averageRating}\r\n                                               onChange={this.changeAverageRatingHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Tags:</label>\r\n                                        <input placeholder=\"Tags\" name=\"tags\" className=\"form-control\"\r\n                                               value={this.state.tags} onChange={this.changeTagsHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Price Category:</label>\r\n                                        <input placeholder=\"Price Category\" name=\"priceCategory\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.priceCategory}\r\n                                               onChange={this.changePriceCategoryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Street Address:</label>\r\n                                        <input placeholder=\"Street Address\" name=\"streetAddress\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.streetAddress}\r\n                                               onChange={this.changeStreetAddressHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input placeholder=\"City\" name=\"city\" className=\"form-control\"\r\n                                               value={this.state.city} onChange={this.changeCityHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>State:</label>\r\n                                        <input placeholder=\"State\" name=\"state\" className=\"form-control\"\r\n                                               value={this.state.state} onChange={this.changeStateHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Zip Code:</label>\r\n                                        <input placeholder=\"Zip Code\" name=\"zipCode\" className=\"form-control\"\r\n                                               value={this.state.zipCode} onChange={this.changeZipCodeHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateRestaurant}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateRestaurantComponent.propTypes = {};\r\n\r\nexport default CreateRestaurantComponent;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/components/CreateFoodComponent.js",["255"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FoodService from \"../services/FoodService\";\r\n\r\nclass CreateFoodComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //Step2 To Use one Component for Add and Update\r\n            id: this.props.match.params.id,\r\n            restaurantID: '',\r\n            name: '',\r\n            cost: '',\r\n            image: '',\r\n            summary: '',\r\n            special: '',\r\n            isActive: '',\r\n            category: ''\r\n\r\n        }\r\n        this.changeRestaurantIDHandler = this.changeRestaurantIDHandler.bind(this);\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeCostHandler = this.changeCostHandler.bind(this);\r\n        this.changeImageHandler = this.changeImageHandler.bind(this);\r\n        this.changeSummaryHandler = this.changeSummaryHandler.bind(this);\r\n        this.changeSpecialHandler = this.changeSpecialHandler.bind(this);\r\n        this.changeIsActiveHandler = this.changeIsActiveHandler.bind(this);\r\n        this.changeCategoryHandler = this.changeCategoryHandler.bind(this);\r\n\r\n        this.saveOrUpdateFood = this.saveOrUpdateFood.bind(this);\r\n    }\r\n\r\n    //Step 3 To Use one Component for Add and Update\r\n    componentDidMount() {\r\n\r\n        //Step 4 To Use one Component for Add and Update\r\n        //if id is negative, its a request to Add a new Restaurant\r\n        if (this.state.id === 'add') {\r\n            return\r\n        } else {\r\n            FoodService.getFoodById(this.state.id).then((res) => {\r\n                let food = res.data;\r\n                this.setState({\r\n                    restaurantID: food.restaurantID,\r\n                    name: food.name,\r\n                    cost: food.cost,\r\n                    image: food.image,\r\n                    summary: food.summary,\r\n                    special: food.special,\r\n                    isActive: food.isActive,\r\n                    category: food.category\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    saveOrUpdateFood = (e) => {\r\n        e.preventDefault();\r\n        let food = {\r\n            restaurantID: this.state.restaurantID,\r\n            name: this.state.name,\r\n            cost: this.state.cost,\r\n            image: this.state.image,\r\n            summary: this.state.summary,\r\n            special: this.state.special,\r\n            isActive: this.state.isActive,\r\n            category: this.state.category\r\n        };\r\n        console.log('food => ' + JSON.stringify(food));\r\n\r\n        //Step 5 To Use one Component for Add and Update\r\n        if (this.state.id === 'add') {\r\n            FoodService.createFood(food).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        } else {\r\n            FoodService.updateFood(food, this.state.id).then(res => {\r\n                this.props.history.push('/food');\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    changeRestaurantIDHandler = (event) => {\r\n        this.setState({restaurantID: event.target.value});\r\n    }\r\n    changeNameHandler = (event) => {\r\n        this.setState({name: event.target.value});\r\n    }\r\n    changeCostHandler = (event) => {\r\n        this.setState({cost: event.target.value});\r\n    }\r\n    changeImageHandler = (event) => {\r\n        this.setState({image: event.target.value});\r\n    }\r\n    changeSummaryHandler = (event) => {\r\n        this.setState({summary: event.target.value});\r\n    }\r\n    changeSpecialHandler = (event) => {\r\n        this.setState({special: event.target.value});\r\n    }\r\n    changeIsActiveHandler = (event) => {\r\n        this.setState({isActive: event.target.value});\r\n    }\r\n    changeCategoryHandler = (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n\r\n\r\n    cancel() {\r\n        this.props.history.push('/food');\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.state.id === 'add') {\r\n            return <h3 className=\"text-center\">Add Food</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update Food</h3>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Restaurant ID:</label>\r\n                                        <input placeholder=\"Restaurant ID\" name=\"restaurantID\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.restaurantID}\r\n                                               onChange={this.changeRestaurantIDHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Food Name:</label>\r\n                                        <input placeholder=\"Food Name\" name=\"name\" className=\"form-control\"\r\n                                               value={this.state.name} onChange={this.changeNameHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Cost:</label>\r\n                                        <input placeholder=\"Cost\" name=\"cost\" className=\"form-control\"\r\n                                               value={this.state.cost} onChange={this.changeCostHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Image:</label>\r\n                                        <input placeholder=\"Image\" name=\"image\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.image}\r\n                                               onChange={this.changeImageHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Summary:</label>\r\n                                        <input placeholder=\"Summary\" name=\"summary\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.summary}\r\n                                               onChange={this.changeSummaryHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Special:</label>\r\n                                        <input placeholder=\"Special\" name=\"special\" className=\"form-control\"\r\n                                               value={this.state.special} onChange={this.changeSpecialHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Is Active:</label>\r\n                                        <input placeholder=\"Is Active\" name=\"isActive\" className=\"form-control\"\r\n                                               value={this.state.isActive} onChange={this.changeIsActiveHandler}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category:</label>\r\n                                        <input placeholder=\"Category\" name=\"category\" className=\"form-control\"\r\n                                               value={this.state.category} onChange={this.changeCategoryHandler}/>\r\n                                    </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateFood}>Save\r\n                                    </button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)}\r\n                                            style={{marginLeft: \"10px\"}}>Cancel\r\n                                    </button>\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFoodComponent.propTypes = {};\r\n\r\nexport default CreateFoodComponent;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/Login.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/UserInfo.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/AccountComponents/UpdateAccount.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/ViewRestaurantComponent.jsx",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/ViewFoodComponent.jsx",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/FoodMenuForm.js",["256","257","258","259","260","261","262","263","264","265","266","267"],"import React, {useState, useEffect} from \"react\";\nimport {\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    makeStyles,\n    Radio,\n    RadioGroup,\n    TextField\n} from \"@material-ui/core\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as employeeService from \"../../services/employeeService\";\nimport SingleLineGridList from \"../../components/GridSingleLine\";\nimport AlignItemsList from \"../../components/AlignList\";\n\nconst priceCategoryItems = [\n    {id: \"1\", title: \"1\"},\n    {id: \"2\", title: \"2\"},\n    {id: \"3\", title: \"3\"},\n    {id: \"4\", title: \"4\"},\n    {id: \"5\", title: \"5\"}\n\n]\n\nconst initialFValues = {\n    id: 0,\n    name: '',\n    averageRating: '',\n    tags: '',\n    isActive: false,\n    priceCategory: '',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zipCode:''\n}\n\n\nexport default function RestaurantForm(props) {\n\n\n    const { addOrEdit, recordForEdit } = props\n\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if (\"name\" in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\n        if (\"streetAddress\" in fieldValues)\n            temp.streetAddress = fieldValues.streetAddress ? \"\" : \"This field is required.\"\n        if (\"zipCode\" in fieldValues)\n            temp.zipCode = fieldValues.zipCode.length > 4 ? \"\" : \"Minimum 5 numbers required.\"\n        if (\"departmentId\" in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm((/*recordForEdit !== undefined ? recordForEdit :*/ initialFValues), true, validate);\n    // } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (validate()) {\n            addOrEdit(values, resetForm);\n\n        }\n    }\n\n    useEffect(() => {\n        if(recordForEdit !== null)\n            setValues({\n                ...recordForEdit\n            })\n        console.log(recordForEdit);\n    }, [recordForEdit]);\n    \n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        label=\"Name\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleInputChange}\n                        error={errors.name}\n                    />\n                    <Controls.Input\n                        label={\"Average Rating\"}\n                        name=\"averageRating\"\n                        value={values.averageRating}\n                        onChange={handleInputChange}\n                        error={errors.averageRating}\n                    />\n                    <Controls.Input\n                        label={\"Tags\"}\n                        name=\"tags\"\n                        value={values.tags}\n                        onChange={handleInputChange}\n                        error={errors.tags}\n                    />\n                    <Controls.Input\n                        label={\"Street Address\"}\n                        name=\"streetAddress\"\n                        value={values.streetAddress}\n                        onChange={handleInputChange}\n                        error={errors.streetAddress}\n                    />\n                    <Controls.Input\n                        label={\"City\"}\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                        error={errors.city}\n\n                    />\n                    <Controls.Input\n                        label={\"State\"}\n                        name=\"state\"\n                        value={values.state}\n                        onChange={handleInputChange}\n                        error={errors.state}\n\n                    />\n                    <Controls.Input\n                        label={\"Zip Code\"}\n                        name=\"zipCode\"\n                        value={values.zipCode}\n                        onChange={handleInputChange}\n                        error={errors.zipCode}\n\n                    />\n                </Grid>\n                <Grid item xs={6}>\n{/*                    <Controls.RadioGroup\n                        name=\"priceCategory\"\n                        value={values.priceCategory}\n                        label=\"Price Cat\"\n                        onChange={handleInputChange}\n                        items={priceCategoryItems}\n                    />*/}\n\n                    {/*<SingleLineGridList />*/}\n\n                    <AlignItemsList/>\n\n                    <Controls.Select\n                        name=\"priceCategory\"\n                        label=\"Price Category\"\n                        value={values.priceCategory}\n                        onChange={handleInputChange}\n                        options={priceCategoryItems}\n                        // options={employeeService.getDepartmentCollection()}\n                        error={errors.priceCategory}\n                    />\n{/*                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />*/}\n                    <Controls.Checkbox\n                        name=\"isActive\"\n                        label=\"Is Active\"\n                        value={values.isActive ? 1 : 0}\n                        onChange={handleInputChange}\n                        error={errors.isActive}\n                    />\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\"/>\n                        <Controls.Button\n                            color=\"default\"\n                            text=\"Reset\"\n                            onClick={resetForm}\n                        />\n                    </div>\n\n\n                </Grid>\n            </Grid>\n        </Form>\n\n\n    );\n}\n\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/Restaurants.js",["268","269","270","271","272","273","274"],"import React, {useEffect, useState} from 'react';\nimport RestaurantForm from \"./RestaurantForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\nimport {InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@material-ui/core\";\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport {EditOutlined, Search} from \"@material-ui/icons\";\nimport AddIcon from \"@material-ui/icons/Add\"\nimport Popup from \"../../components/Popup\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport Notification from \"../../components/controls/Notification\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\nimport RestaurantService from \"../../../../services/RestaurantService\";\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport useStateWithCallback, {useStateWithCallbackInstant} from 'use-state-with-callback';\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3),\n    },\n    searchInput: {\n        width: '75%'\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\nconst headCells = [\n    {id: \"name\", label: \"Name\"},\n    {id: \"averageRating\", label: \"Average Rating\"},\n    {id: \"tags\", label: \"Tags\"},\n    {id: \"city\", label: \"City\", /*disableSorting: true*/},\n    {id: \"isActive\", label: \"Is Active\"},\n    {id: \"actions\", label: \"Actions\", disableSorting: true}\n]\n\nexport default function Restaurants(props) {\n\n    const getData = /*async*/ () => {\n        return RestaurantService.getRestaurant(0).then(res => res.data)\n            .then((data) => {\n                setRecords(() => data);\n                // setRecords((records) => data);\n            });\n    }\n\n    const classes = useStyles();\n\n\n    const [recordForEdit, setRecordForEdit] = useState(null);\n\n\n\n    const getDataTwo = /*async*/ () => {\n        return RestaurantService.getRestaurant(0).then(res => res.data)\n            .then((data) => {\n                setRecords(() => data);\n                console.log(\"getDataTwo \")\n                // setRecords((records) => data);\n            });\n    }\n\n    //intial Restaurant List holder\n    const [records, setRecords] = useState([]);\n\n    // fetch( 'http://localhost:8080/restaurant/all/page/0')\n    // .then(response => response.json()))\n    // .then(data => console.log(data)));\n    // (restaurants === undefined||restaurants === null) ? \"\" : restaurants);\n\n    // console.log(records);\n\n\n\n    const [filterFn, setFilterFn] = useState({\n        fn: items => {\n            return items;\n        }\n    });\n    const [openPopup, setOpenPopup] = useState(false);\n    const [notify, setNotify] = useState({isOpen: false, message: '', type: ''});\n    const [confirmDialog, setConfirmDialog] =\n        useState({isOpen: false, title: \"\", subTitle: \"\"});\n\n/*    const [refreshData, setRefreshData] = useStateWithCallbackInstant(1,x => {\n        RestaurantService.getRestaurant(0).then(res => res.data)\n            .then((data) => {\n                setRecords(() => data);\n            });\n    })*/\n    // const [refreshData, setRefreshData] = useState(1);\n\n    // useEffect(() => {\n    //     getData()/\n    // }, [setRefreshData()]);\n\n    //intial load of Page******\n    useEffect(() => {\n        getData()/*.then(R => {return R})*/;\n        // console.log(1);\n        // console.log(records.data);\n    }, []);\n\n/*    useEffect(() => {\n        fetch(\"http://localhost:8080/restaurant/all/page/0\")\n              .then(response => response.json())\n              .then(json => setRecords(json));\n    }, [refreshData]);*/\n\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value === \"\")\n                    return items;\n                else\n                    //value toLowerCase so that it matches cases\n                    return items.filter(x => x.name.toLowerCase().includes(target.value.toLowerCase()))\n            }\n        })\n    }\n\n    let someValue =3;\n\n    // getDataTwo()/*.then(r =>setRecords(r.data) )*/;\n    const reData = () => {\n        // setRefreshData(()=>{\n        //     return 2 + refreshData;\n        // });\n        // setRefreshData(3);\n        // setRefreshData( {\n        //     ...refreshData,\n        //     [refreshData]:someValue\n        // })\n        // console.log(\"before: \" + refreshData)\n\n        // setRefreshData({\n        //     refreshData: 3\n        // }, console.log('after setState' + refreshData))\n\n\n        // this.setState({\n        //     loading: !this.state.loading\n        // }, console.log('after setState', this.state.loading))\n\n\n        // console.log(refreshData);\n    }\n\n    const getDataThree = () => {\n        return RestaurantService.getRestaurant(0);\n    }\n\n\n    //inserting or Updating records\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id === 0) {\n            console.log(employee);\n            RestaurantService.createRestaurant(employee);\n        }\n        // employeeService.insertEmployee(employee);\n        else {\n            RestaurantService.updateRestaurant(employee, employee.id);\n            // employeeService.updateEmployee(employee);}\n        }\n        resetForm();\n\n        getDataTwo().then(result => {\n            if(result) {\n                setRecords(result.data);\n                console.log(\"getTwo\");\n            }\n        }).catch((error) =>{\n            console.log(error);\n        })\n\n\n\n        getDataThree().then((result) => {\n            if(result.status >= 200 && result.status <= 300){\n                setRecords(result.data);\n                console.log(\"getThree \" + result.status);\n            }\n        })\n\n        getDataThree().catch((error) => {\n            console.log(error);\n        })\n\n\n\n        setRecordForEdit(null);\n        setOpenPopup(false);\n        // window.location.reload();\n        // setRecords(getData());\n\n        // reData();\n        // console.log(refreshData);\n\n/*        setRefreshData(2);\n        console.log(refreshData);*/\n\n        setNotify({\n            isOpen: true,\n            message: \"Submitted Successfully\",\n            type: \"success\"\n        })\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item);\n        setOpenPopup(true);\n    }\n\n    const onDelete = id => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        })\n        RestaurantService.deleteRestaurant(id);\n        // employeeService.deleteEmployee(id);\n        // setRecords(employeeService.getData);\n        setNotify({\n            isOpen: true,\n            message: \"Deleted Successfully\",\n            type: \"error\"\n        })\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader\n                title=\"Restaurants\"\n                subTitle=\"Add, Edit, or Delete a Restaurant\"\n                icon={<RestaurantIcon fontSize=\"large\"/>}\n                // icon={<PeopleOutlineTwoToneIcon fontSize=\"large\"/>}\n            />\n            <Paper className={classes.pageContent}>\n\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Restaurants\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\">\n                                <Search/>\n                            </InputAdornment>)\n\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Add New\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon/>}\n                        className={classes.newButton}\n                        onClick={() => {\n                            setOpenPopup(true);\n                            setRecordForEdit(null);\n                        }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead/>\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item => (\n                                <TableRow key={item.id}>\n                                    <TableCell>{item.name}</TableCell>\n                                    <TableCell>{item.averageRating}</TableCell>\n                                    <TableCell>{item.tags}</TableCell>\n                                    <TableCell>{item.city}</TableCell>\n                                    <TableCell>{item.isActive ? \"Active\": \"Inactive\"}</TableCell>\n                                    <TableCell>\n                                        <Controls.ActionButton\n                                            color=\"primary\"\n                                            onClick={() => {\n                                                openInPopup(item)\n                                            }}>\n                                            <EditOutlinedIcon fontSize=\"small\"/>\n                                        </Controls.ActionButton>\n                                        <Controls.ActionButton\n                                            color=\"secondary\"\n                                            onClick={() => {\n                                                setConfirmDialog({\n                                                    isOpen: true,\n                                                    title: 'Are you wish to delete this record?',\n                                                    subTitle: \"You can not undo this operation\",\n                                                    onConfirm: () => onDelete(item.id)\n                                                })\n                                            }}>\n                                            <CloseIcon fontSize=\"small\"/>\n                                        </Controls.ActionButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination/>\n            </Paper>\n            <Popup\n                title=\"New Restaurant Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <RestaurantForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit}\n                />\n            </Popup>\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </React.Fragment>\n\n    );\n}\n","/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/Header.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/AddRestaurantLink.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/DataTable.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/hooks/useFullPageLoader.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/ExternalInfo.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/hoc/App.config.js",["275"],"const GIT_REPO =\r\n    \"https://github.com/codegeous/react-component-depot/tree/master/src/\";\r\nconst YOUTUBE_BASE = \"https://youtu.be/\";\r\n\r\nexport default {\r\n    api: process.env.REACT_APP_API_ENDPOINT,\r\n\r\n    GOOGLE: {\r\n        GAPI_KEY: \"\",\r\n        reCaptcha: process.env.REACT_APP_RECAPCTHA_SITE_TOKEN,\r\n        GA_TRACKING_CODE: process.env.REACT_APP_GA_TRACKING_CODE,\r\n    },\r\n\r\n    hCaptchaSiteToken: process.env.REACT_APP_HCAPTCHA_SITE_TOKEN,\r\n\r\n    links: {\r\n        customGoogleMaps: {\r\n            tutorial: `${YOUTUBE_BASE}xUsn2nj4fy0`,\r\n            code: `${GIT_REPO}pages/GoogleMaps/CustomStyle/index.js`,\r\n        },\r\n        buttonLoaderHooks: {\r\n            tutorial: `${YOUTUBE_BASE}nCEnqQABC5A`,\r\n            code: `${GIT_REPO}pages/ButtonLoadingSpinner/index.js`,\r\n        },\r\n        otpBox: {\r\n            tutorial: `${YOUTUBE_BASE}qf56frPk5lA`,\r\n            code: `${GIT_REPO}pages/OTPBox/index.js`,\r\n        },\r\n        contactListCRUD: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/ContactList/index.js`,\r\n        },\r\n        showAndHideElements: {\r\n            tutorial: `${YOUTUBE_BASE}jRxoO-Zd0pQ`,\r\n            code: `${GIT_REPO}pages/ReactBasics/ShowAndHide/index.js`,\r\n        },\r\n        scrollIndicator: {\r\n            tutorial: `${YOUTUBE_BASE}-rYmnXV6sYw`,\r\n            code: `${GIT_REPO}components/ScrollIndicator/index.js`,\r\n        },\r\n        floatingYoutubePlayer: {\r\n            tutorial: `${YOUTUBE_BASE}lT4uJI6TXAg`,\r\n            code: `${GIT_REPO}components/YoutubePlayer/index.js`,\r\n        },\r\n        signup: {\r\n            tutorial: \"\",\r\n            code: `${GIT_REPO}pages/Signup/index.js`,\r\n        },\r\n        hooks: {\r\n            tutorial: `${YOUTUBE_BASE}fT7jBMG7GIM`,\r\n            code: `${GIT_REPO}pages/HooksDemo/index.js`,\r\n        },\r\n        datatable: {\r\n            tutorial: `${YOUTUBE_BASE}emX5KvZ6Hbo`,\r\n            code: `${GIT_REPO}pages/DataTable/index.js`,\r\n        },\r\n        batteryStatus: {\r\n            tutorial: `${YOUTUBE_BASE}50cOgnVmflE`,\r\n            code: `${GIT_REPO}pages/BatteryStatus/index.js`,\r\n        },\r\n        fileupload: {\r\n            tutorial: `${YOUTUBE_BASE}_XD5ko7Fy9E`,\r\n            code: `${GIT_REPO}pages/FileUpload/index.js`,\r\n        },\r\n        geoLocation: {\r\n            tutorial: `${YOUTUBE_BASE}TID8Z29je5o`,\r\n            code: `${GIT_REPO}pages/GeoLocation/index.js`,\r\n        },\r\n        infniteScrolling: {\r\n            tutorial: `${YOUTUBE_BASE}8nFNxnjoTZ4`,\r\n            code: `${GIT_REPO}pages/InfiniteScrolling/index.js`,\r\n        },\r\n        recaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}e_vMoPCBfqU`,\r\n            code: `${GIT_REPO}pages/ReCaptcha/index.js`,\r\n        },\r\n        hcaptcha: {\r\n            tutorial: `${YOUTUBE_BASE}KcLeXxlkqf0`,\r\n            code: `${GIT_REPO}pages/HCaptcha/index.js`,\r\n        },\r\n        autocomplete: {\r\n            tutorial: `${YOUTUBE_BASE}G2QyeafA3gw`,\r\n            code: `${GIT_REPO}pages/CountrySearch/index.js`,\r\n        },\r\n        searchFilter: {\r\n            tutorial: `${YOUTUBE_BASE}aBWwJ4ibpps`,\r\n            code: `${GIT_REPO}pages/SearchFilter/index.js`,\r\n        },\r\n        accordion: {\r\n            tutorial: `${YOUTUBE_BASE}AjQctXfmOqw`,\r\n            code: `${GIT_REPO}pages/AccordionDemo/index.js`,\r\n        },\r\n        leafletBasic: {\r\n            tutorial: `${YOUTUBE_BASE}i9oX1upSKjI`,\r\n            code: `${GIT_REPO}pages/Leaflet/basic.js`,\r\n        },\r\n        leafletMarker: {\r\n            tutorial: `${YOUTUBE_BASE}UNSYoW3gkDc`,\r\n            code: `${GIT_REPO}pages/Leaflet/markers.js`,\r\n        },\r\n        leafletCurrentLocation: {\r\n            tutorial: `${YOUTUBE_BASE}7jWYLirwt0k`,\r\n            code: `${GIT_REPO}pages/Leaflet/currentLocation.js`,\r\n        },\r\n        leafletDraw: {\r\n            tutorial: `${YOUTUBE_BASE}Bp_6MkKSOQE`,\r\n            code: `${GIT_REPO}pages/Leaflet/draw.js`,\r\n        },\r\n        treeList: {\r\n            tutorial: `${YOUTUBE_BASE}uRSzyVubap4`,\r\n            code: `${GIT_REPO}pages/TreeList/index.js`,\r\n        },\r\n        fileDownloader: {\r\n            tutorial: `${YOUTUBE_BASE}0AS9Gfd1j5s`,\r\n            code: `${GIT_REPO}pages/FileDownloader/index.js`,\r\n        },\r\n        imageZoom: {\r\n            tutorial: `${YOUTUBE_BASE}uhgQFqr9ezQ`,\r\n            code: `${GIT_REPO}pages/ImageZoom/index.js`,\r\n        },\r\n        starRating: {\r\n            tutorial: `${YOUTUBE_BASE}nErdlbLWqtA`,\r\n            code: `${GIT_REPO}pages/Rating/index.js`,\r\n        },\r\n        leafletStaticMap: {\r\n            tutorial: `${YOUTUBE_BASE}sz_FaLpMNZc`,\r\n            code: `${GIT_REPO}pages/Leaflet/StaticMap.js`,\r\n        },\r\n        leafletPrint: {\r\n            tutorial: `${YOUTUBE_BASE}mhGqgY2l-ik`,\r\n            code: `${GIT_REPO}pages/Leaflet/Print.js`,\r\n        },\r\n        tabs: {\r\n            tutorial: `${YOUTUBE_BASE}MLYH-o_EdaI`,\r\n            code: `${GIT_REPO}pages/SimpleTabs/index.js`,\r\n        },\r\n        dnd: {\r\n            tutorial: `${YOUTUBE_BASE}O2dTW3uNAeQ`,\r\n            code: `${GIT_REPO}pages/TeamSelection/index.js`,\r\n        },\r\n    },\r\n    youtubeVideos: [\r\n        {\r\n            title: \"Full page loading spinner for API calls in ReactJS with Redux\",\r\n            id: \"vCs50MV-TbM\",\r\n        },\r\n        {\r\n            title: \"File Upload with progress bar in React JS and axios\",\r\n            id: \"Ti8QNiRRzOA\",\r\n        },\r\n        {\r\n            title: \"Add loading spinner for buttons in reactjs\",\r\n            id: \"vgDObZGhQuw\",\r\n        },\r\n        {\r\n            title: \"Display fallback image for a broken image link in reactjs \",\r\n            id: \"90P1_xCaim4\",\r\n        },\r\n        {\r\n            title: \"Material style preloader for image tag in react js\",\r\n            id: \"GBHBjv6xfY4\",\r\n        },\r\n        {\r\n            title: \"Building a search filter in reactjs\",\r\n            id: \"RM_nXOyHwN0\",\r\n        },\r\n    ],\r\n};\r\n","/home/damocles/AdminPortal/admin_portal_react/src/services/RestaurantService.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/services/FoodService.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/services/AuthenticationService.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/services/UserService.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/pages/Employees/RestaurantForm.js",["276","277","278","279","280","281","282","283","284","285","286"],"import React, {useState, useEffect} from \"react\";\nimport {\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    makeStyles,\n    Radio,\n    RadioGroup,\n    TextField\n} from \"@material-ui/core\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst priceCategoryItems = [\n    {id: \"1\", title: \"1\"},\n    {id: \"2\", title: \"2\"},\n    {id: \"3\", title: \"3\"},\n    {id: \"4\", title: \"4\"},\n    {id: \"5\", title: \"5\"}\n\n]\n\nconst initialFValues = {\n    id: 0,\n    name: '',\n    averageRating: '',\n    tags: '',\n    isActive: false,\n    priceCategory: '',\n    streetAddress: '',\n    city: '',\n    state: '',\n    zipCode:''\n}\n\n\nexport default function RestaurantForm(props) {\n/*    //destructured Array declaration\n        const [x, setx] = useState(5);\n        setx(6);\n\n        let y = x +3;\n\n    /!*    the first param the func, will run when\n        ever the value of one of the 2nd param\n        array memebers changes*!/\n        useEffect(() => {\n        }\n        ,[x,y]);*/\n\n    const { addOrEdit, recordForEdit } = props\n    // console.log(recordForEdit);\n    // console.log(props.recordForEdit);\n\n    // const validate = (fieldValues = (values.id !== 0 ? recordForEdit : values)) => {\n// console.log(typeof values);\n// console.log(\"values: \" + values);\n// console.log(fieldValues);\n// console.log(fieldValues.zipCode.length);\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if (\"name\" in fieldValues)\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\n        // if (\"email\" in fieldValues)\n        //     temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if (\"streetAddress\" in fieldValues)\n            temp.streetAddress = fieldValues.streetAddress ? \"\" : \"This field is required.\"\n        if (\"zipCode\" in fieldValues)\n            temp.zipCode = fieldValues.zipCode.length > 4 ? \"\" : \"Minimum 5 numbers required.\"\n        // console.log(\"temp.zipCode: \" + temp.zipCode);\n        // console.log(\"fieldValues.zipCode.length \" + fieldValues.zipCode.length);\n        if (\"departmentId\" in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm((/*recordForEdit !== undefined ? recordForEdit :*/ initialFValues), true, validate);\n    // } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (validate()) {\n            //insert data call to backend simulation\n            addOrEdit(values, resetForm);\n            // employeeService.insertEmployee(values);\n            // resetForm();\n        }\n        // window.alert(\"testing...\");\n    }\n\n    useEffect(() => {\n        if(recordForEdit !== null)\n            setValues({\n                ...recordForEdit\n            })\n        console.log(recordForEdit);\n    }, [recordForEdit]);\n    \n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        label=\"Name\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleInputChange}\n                        error={errors.name}\n                    />\n                    <Controls.Input\n                        label={\"Average Rating\"}\n                        name=\"averageRating\"\n                        value={values.averageRating}\n                        onChange={handleInputChange}\n                        error={errors.averageRating}\n                    />\n                    <Controls.Input\n                        label={\"Tags\"}\n                        name=\"tags\"\n                        value={values.tags}\n                        onChange={handleInputChange}\n                        error={errors.tags}\n                    />\n                    <Controls.Input\n                        label={\"Street Address\"}\n                        name=\"streetAddress\"\n                        value={values.streetAddress}\n                        onChange={handleInputChange}\n                        error={errors.streetAddress}\n                    />\n                    <Controls.Input\n                        label={\"City\"}\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                        error={errors.city}\n\n                    />\n                    <Controls.Input\n                        label={\"State\"}\n                        name=\"state\"\n                        value={values.state}\n                        onChange={handleInputChange}\n                        error={errors.state}\n\n                    />\n                    <Controls.Input\n                        label={\"Zip Code\"}\n                        name=\"zipCode\"\n                        value={values.zipCode}\n                        onChange={handleInputChange}\n                        error={errors.zipCode}\n\n                    />\n                </Grid>\n                <Grid item xs={6}>\n{/*                    <Controls.RadioGroup\n                        name=\"priceCategory\"\n                        value={values.priceCategory}\n                        label=\"Price Cat\"\n                        onChange={handleInputChange}\n                        items={priceCategoryItems}\n                    />*/}\n                    <Controls.Select\n                        name=\"priceCategory\"\n                        label=\"Price Category\"\n                        value={values.priceCategory}\n                        onChange={handleInputChange}\n                        options={priceCategoryItems}\n                        // options={employeeService.getDepartmentCollection()}\n                        error={errors.priceCategory}\n                    />\n{/*                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />*/}\n                    <Controls.Checkbox\n                        name=\"isActive\"\n                        label=\"Is Active\"\n                        value={values.isActive ? 1 : 0}\n                        onChange={handleInputChange}\n                        error={errors.isActive}\n                    />\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\"/>\n                        <Controls.Button\n                            color=\"default\"\n                            text=\"Reset\"\n                            onClick={resetForm}\n                        />\n                    </div>\n\n\n                </Grid>\n            </Grid>\n        </Form>\n\n\n    );\n}\n\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/useForm.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/GridSingleLine.js",["287"],"import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport * as tileData from \"react-bootstrap/ElementChildren\";\nimport RestaurantService from \"../../../services/RestaurantService\";\n// import tileData from './tileData';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        // backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        // transform: 'translateZ(0)',\n    },\n    title: {\n        // color: theme.palette.primary.light,\n    },\n    titleBar: {\n        // background:\n        //     'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nexport default function SingleLineGridList() {\n    const classes = useStyles();\n\n    //intial Restaurant List holder\n    const [records, setRecords] = useState([]);\n\n    const getData = /*async*/ () => {\n        return RestaurantService.getRestaurant(0).then(res => res.data)\n            .then((data) => {\n                setRecords(() => data);\n                // setRecords((records) => data);\n            });\n    }\n\n    //intial load of Page******\n    useEffect(() => {\n        getData()/*.then(R => {return R})*/;\n        // console.log(1);\n        // console.log(records.data);\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={2.5}>\n                {records.map((restaurant) => (\n                    <GridListTile key={restaurant.priceCategory}>\n                        {/*<img src={tile.img} alt={tile.title} />*/}\n                        <GridListTileBar\n                            title={restaurant.name}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${restaurant.name}`}>\n                                    <StarBorderIcon className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/AlignList.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/PageHeader.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/Popup.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/ConfirmDialog.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Controls.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/useTable.js",["288"],"import React, {useState} from 'react';\nimport {makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        position:\"center\",\n        width : \"100%\"\n    },\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            // color: theme.palette.primary.main,\n            // backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells, filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [5, 10, 25]\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] =\n        useState(pages[page]);\n    const [order, setOrder] = useState();\n    const [orderBy, setOrderBy] = useState();\n\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc')\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell =>\n                        (<TableCell key={headCell.id}\n                                    sortDirction={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => {\n                                        handleSortRequest(headCell.id)\n                                    }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy)).\n        slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n    }\n\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n\n}\n\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Notification.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/services/employeeService.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/layout.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Search.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Pagination.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/Header.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/FullPageLoader.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/components/hoc/withExternalInfo.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/hooks/useGAEventTracker.js",["289"],"import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst useGAEventTracker = (category = \"Category\") => {\r\n    const trackEvent = (action = \"action\", label = \"label\") => {\r\n        ReactGA.event({\r\n            category,\r\n            action,\r\n            label,\r\n        });\r\n    };\r\n\r\n    return trackEvent;\r\n};\r\n\r\nexport default useGAEventTracker;\r\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/input.js",["290"],"import React from 'react';\nimport {Grid, TextField} from \"@material-ui/core\";\n\nexport default function Input(props) {\n\n    const {name, label, value,error=null, onChange, ...other} = props;\n\n    return (\n        <TextField\n            variant = {\"outlined\"}\n            label = {label}\n            name = {name}\n            value = {value}\n            onChange = {onChange}\n            {...other}\n/*            error\n            helperText=\"Some Validation Error.\"*/\n            // need to ask about this syntax below\n            {...(error && {error:true, helperText:error})}\n\n        />\n\n    );\n}\n\n\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/RadioGroup.js",["291"],"import React from 'react';\nimport {FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup} from \"@material-ui/core\";\n\nexport default function RadioGroup(props) {\n\nconst {name, label, value, onChange, items} = props;\n\n    return (\n        <FormControl>\n            <FormLabel>Gender</FormLabel>\n            <MuiRadioGroup row\n                        name={name}\n                        value={value}\n                        onChange={onChange}>\n                {\n                    items.map(\n                        (item)=>(\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    );\n\n}\n\n","/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Checkbox.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Select.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/DatePicker.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/ActionButton.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/materialUi/src/components/controls/Button.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/Navigation/NavigationDrawer.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/Account.js",["292","293","294"],"/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/UpdateAccountRole.js",[],"/home/damocles/AdminPortal/admin_portal_react/src/components/AdminAccountManagement/UpdateAccountFields.js",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":14},{"ruleId":"299","severity":1,"message":"303","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":20},{"ruleId":"299","severity":1,"message":"304","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":17},{"ruleId":"299","severity":1,"message":"305","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":33},{"ruleId":"299","severity":1,"message":"306","line":14,"column":12,"nodeType":"301","messageId":"302","endLine":14,"endColumn":18},{"ruleId":"299","severity":1,"message":"307","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":25},{"ruleId":"299","severity":1,"message":"308","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"308","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"308","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"309","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":24},{"ruleId":"299","severity":1,"message":"310","line":3,"column":5,"nodeType":"301","messageId":"302","endLine":3,"endColumn":16},{"ruleId":"299","severity":1,"message":"311","line":4,"column":5,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"312","line":5,"column":5,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"313","line":7,"column":5,"nodeType":"301","messageId":"302","endLine":7,"endColumn":15},{"ruleId":"299","severity":1,"message":"314","line":8,"column":5,"nodeType":"301","messageId":"302","endLine":8,"endColumn":10},{"ruleId":"299","severity":1,"message":"315","line":9,"column":5,"nodeType":"301","messageId":"302","endLine":9,"endColumn":15},{"ruleId":"299","severity":1,"message":"316","line":10,"column":5,"nodeType":"301","messageId":"302","endLine":10,"endColumn":14},{"ruleId":"299","severity":1,"message":"317","line":14,"column":13,"nodeType":"301","messageId":"302","endLine":14,"endColumn":28},{"ruleId":"299","severity":1,"message":"318","line":15,"column":8,"nodeType":"301","messageId":"302","endLine":15,"endColumn":26},{"ruleId":"319","severity":1,"message":"320","line":56,"column":65,"nodeType":"321","messageId":"322","endLine":56,"endColumn":67},{"ruleId":"323","severity":1,"message":"324","line":89,"column":8,"nodeType":"325","endLine":89,"endColumn":23,"suggestions":"326"},{"ruleId":"299","severity":1,"message":"327","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":32},{"ruleId":"299","severity":1,"message":"317","line":7,"column":13,"nodeType":"301","messageId":"302","endLine":7,"endColumn":28},{"ruleId":"299","severity":1,"message":"328","line":9,"column":9,"nodeType":"301","messageId":"302","endLine":9,"endColumn":21},{"ruleId":"299","severity":1,"message":"329","line":18,"column":8,"nodeType":"301","messageId":"302","endLine":18,"endColumn":28},{"ruleId":"299","severity":1,"message":"330","line":18,"column":31,"nodeType":"301","messageId":"302","endLine":18,"endColumn":58},{"ruleId":"299","severity":1,"message":"331","line":137,"column":9,"nodeType":"301","messageId":"302","endLine":137,"endColumn":18},{"ruleId":"299","severity":1,"message":"332","line":140,"column":11,"nodeType":"301","messageId":"302","endLine":140,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":5,"column":1,"nodeType":"335","endLine":168,"endColumn":3},{"ruleId":"299","severity":1,"message":"309","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":24},{"ruleId":"299","severity":1,"message":"310","line":3,"column":5,"nodeType":"301","messageId":"302","endLine":3,"endColumn":16},{"ruleId":"299","severity":1,"message":"311","line":4,"column":5,"nodeType":"301","messageId":"302","endLine":4,"endColumn":21},{"ruleId":"299","severity":1,"message":"312","line":5,"column":5,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"313","line":7,"column":5,"nodeType":"301","messageId":"302","endLine":7,"endColumn":15},{"ruleId":"299","severity":1,"message":"314","line":8,"column":5,"nodeType":"301","messageId":"302","endLine":8,"endColumn":10},{"ruleId":"299","severity":1,"message":"315","line":9,"column":5,"nodeType":"301","messageId":"302","endLine":9,"endColumn":15},{"ruleId":"299","severity":1,"message":"316","line":10,"column":5,"nodeType":"301","messageId":"302","endLine":10,"endColumn":14},{"ruleId":"299","severity":1,"message":"317","line":14,"column":13,"nodeType":"301","messageId":"302","endLine":14,"endColumn":28},{"ruleId":"319","severity":1,"message":"320","line":77,"column":65,"nodeType":"321","messageId":"322","endLine":77,"endColumn":67},{"ruleId":"323","severity":1,"message":"324","line":113,"column":8,"nodeType":"325","endLine":113,"endColumn":23,"suggestions":"336"},{"ruleId":"299","severity":1,"message":"337","line":8,"column":13,"nodeType":"301","messageId":"302","endLine":8,"endColumn":21},{"ruleId":"338","severity":1,"message":"339","line":122,"column":79,"nodeType":"340","messageId":"341","endLine":122,"endColumn":80,"fix":"342"},{"ruleId":"299","severity":1,"message":"343","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"299","severity":1,"message":"344","line":2,"column":9,"nodeType":"301","messageId":"302","endLine":2,"endColumn":13},{"ruleId":"299","severity":1,"message":"345","line":6,"column":14,"nodeType":"301","messageId":"302","endLine":6,"endColumn":19},{"ruleId":"299","severity":1,"message":"309","line":1,"column":28,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"346","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"347","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":16},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'ExternalInfo' is defined but never used.","'AppConfig' is defined but never used.","'CreateRestaurantComponent' is defined but never used.","'loader' is assigned a value but never used.","'RestaurantService' is defined but never used.","'PropTypes' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'makeStyles' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'TextField' is defined but never used.","'employeeService' is defined but never used.","'SingleLineGridList' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["350"],"'PeopleOutlineTwoToneIcon' is defined but never used.","'EditOutlined' is defined but never used.","'useStateWithCallback' is defined but never used.","'useStateWithCallbackInstant' is defined but never used.","'someValue' is assigned a value but never used.","'reData' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["351"],"'tileData' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"352","text":"353"},"'React' is defined but never used.","'Grid' is defined but never used.","'label' is assigned a value but never used.","'Button' is defined but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},[3740,3750],"\n        .","Update the dependencies array to be: [recordForEdit, setValues]",{"range":"357","text":"358"},{"range":"359","text":"358"},[2339,2354],"[recordForEdit, setValues]",[3278,3293]]