{"ast":null,"code":"var _jsxFileName = \"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/AddRestaurantLink.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useParams, useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\nimport queryString from \"query-string\"; // Usage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddRestaurantLink() {\n  _s();\n\n  // Get the router object\n  const router = useRouter(); // Get value from query string (?postId=123) or route param (/:postId)\n\n  console.log(router.query.postId); // Get current pathname\n\n  console.log(router.pathname); // Navigate with with router.push()\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      color: \"white\",\n      backgroundColor: \"#333\",\n      height: \"30px\",\n      float: \"left\"\n    },\n    onClick: e => router.push('/add-restaurant/add'),\n    children: \"Add Restaurant\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n} // Hook\n\n\n_s(AddRestaurantLink, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = AddRestaurantLink;\nexport function useRouter() {\n  _s2();\n\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch(); // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: { ...queryString.parse(location.search),\n        // Convert string to object\n        ...params\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history\n    };\n  }, [params, match, location, history]);\n}\n\n_s2(useRouter, \"Rwg7Mma86I553fS3ZVShWfMSkTE=\", false, function () {\n  return [useParams, useLocation, useHistory, useRouteMatch];\n});\n\nexport default AddRestaurantLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRestaurantLink\");","map":{"version":3,"sources":["/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/AddRestaurantLink.js"],"names":["useMemo","useParams","useLocation","useHistory","useRouteMatch","queryString","AddRestaurantLink","router","useRouter","console","log","query","postId","pathname","color","backgroundColor","height","float","e","push","params","location","history","match","replace","parse","search"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,UAHJ,EAIIC,aAJJ,QAKO,kBALP;AAMA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;;;;AACA,SAASC,iBAAT,GAA6B;AAAA;;AACzB;AACA,QAAMC,MAAM,GAAGC,SAAS,EAAxB,CAFyB,CAGzB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAP,CAAaC,MAAzB,EAJyB,CAKzB;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACM,QAAnB,EANyB,CAOzB;;AACA,sBAAO;AAAQ,IAAA,KAAK,EAAE;AAClBC,MAAAA,KAAK,EAAE,OADW;AACFC,MAAAA,eAAe,EAAE,MADf;AACsBC,MAAAA,MAAM,EAAC,MAD7B;AACqCC,MAAAA,KAAK,EAAC;AAD3C,KAAf;AAEJ,IAAA,OAAO,EAAGC,CAAD,IAAOX,MAAM,CAACY,IAAP,CAAY,qBAAZ,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,C,CACD;;;GAZSb,iB;UAEUE,S;;;KAFVF,iB;AAaT,OAAO,SAASE,SAAT,GAAqB;AAAA;;AACxB,QAAMY,MAAM,GAAGnB,SAAS,EAAxB;AACA,QAAMoB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAMoB,KAAK,GAAGnB,aAAa,EAA3B,CAJwB,CAKxB;AACA;;AACA,SAAOJ,OAAO,CAAC,MAAM;AACjB,WAAO;AACH;AACAmB,MAAAA,IAAI,EAAEG,OAAO,CAACH,IAFX;AAGHK,MAAAA,OAAO,EAAEF,OAAO,CAACE,OAHd;AAIHX,MAAAA,QAAQ,EAAEQ,QAAQ,CAACR,QAJhB;AAKH;AACA;AACA;AACAF,MAAAA,KAAK,EAAE,EACH,GAAGN,WAAW,CAACoB,KAAZ,CAAkBJ,QAAQ,CAACK,MAA3B,CADA;AACoC;AACvC,WAAGN;AAFA,OARJ;AAYH;AACA;AACAG,MAAAA,KAdG;AAeHF,MAAAA,QAfG;AAgBHC,MAAAA;AAhBG,KAAP;AAkBH,GAnBa,EAmBX,CAACF,MAAD,EAASG,KAAT,EAAgBF,QAAhB,EAA0BC,OAA1B,CAnBW,CAAd;AAoBH;;IA3Bed,S;UACGP,S,EACEC,W,EACDC,U,EACFC,a;;;AAyBlB,eAAeE,iBAAf","sourcesContent":["import { useMemo } from \"react\";\r\nimport {\r\n    useParams,\r\n    useLocation,\r\n    useHistory,\r\n    useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\n// Usage\r\nfunction AddRestaurantLink() {\r\n    // Get the router object\r\n    const router = useRouter();\r\n    // Get value from query string (?postId=123) or route param (/:postId)\r\n    console.log(router.query.postId);\r\n    // Get current pathname\r\n    console.log(router.pathname);\r\n    // Navigate with with router.push()\r\n    return <button style={{\r\n        color: \"white\", backgroundColor: \"#333\",height:\"30px\" ,float:\"left\"\r\n    }} onClick={(e) => router.push('/add-restaurant/add')}>Add Restaurant</button>;\r\n}\r\n// Hook\r\nexport function useRouter() {\r\n    const params = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n    // Return our custom router object\r\n    // Memoize so that a new object is only returned if something changes\r\n    return useMemo(() => {\r\n        return {\r\n            // For convenience add push(), replace(), pathname at top level\r\n            push: history.push,\r\n            replace: history.replace,\r\n            pathname: location.pathname,\r\n            // Merge params and parsed query string into single \"query\" object\r\n            // so that they can be used interchangeably.\r\n            // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\r\n            query: {\r\n                ...queryString.parse(location.search), // Convert string to object\r\n                ...params,\r\n            },\r\n            // Include match, location, history objects so we have\r\n            // access to extra React Router functionality if needed.\r\n            match,\r\n            location,\r\n            history,\r\n        };\r\n    }, [params, match, location, history]);\r\n}\r\n\r\nexport default AddRestaurantLink;\r\n"]},"metadata":{},"sourceType":"module"}