{"ast":null,"code":"var _jsxFileName = \"/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/RestaurantDataTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Header from \"./Header\";\nimport { TableHeader, Pagination, Search } from \"./components/DataTable\";\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\nimport ExternalInfo from \"./components/ExternalInfo\";\nimport AppConfig from \"./components/hoc/App.config\";\nimport RestaurantService from \"../services/RestaurantService\";\nimport AddRestaurantLink from \"./AddRestaurantLink\"; // \"@fortawesome/react-fontawesome\": \"^0.1.14\",\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataTable = () => {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [loader, showLoader, hideLoader] = useFullPageLoader();\n  const [totalItems, setTotalItems] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const [sorting, setSorting] = useState({\n    field: \"\",\n    order: \"\"\n  });\n  const ITEMS_PER_PAGE = 50;\n  const headers = [{\n    name: \"Name\",\n    field: \"name\",\n    sortable: true\n  }, {\n    name: \"Average Rating\",\n    field: \"averageRating\",\n    sortable: false\n  }, {\n    name: \"Tags\",\n    field: \"tags\",\n    sortable: true\n  }, {\n    name: \"City\",\n    field: \"city\",\n    sortable: true\n  }];\n  useEffect(() => {\n    const getData = () => {\n      showLoader(); // RestaurantService.getRestaurant()\n      // fetch(\"https://jsonplaceholder.typicode.com/comments\")\n\n      /*            fetch(\"http://localhost:8080/restaurant\")\r\n                      .then(response => response.json())\r\n                      .then(json => {\r\n                          hideLoader();\r\n                          setComments(json);\r\n                      });*/\n\n      RestaurantService.getRestaurant().then(res => res.data).then(data => {\n        hideLoader();\n        setComments(comments => data); // console.log(data);\n      }); // RestaurantService.getRestaurant().then((res) =>\n      // {\n      //     console.log(typeof res.data)\n      //     setComments(res.data)\n      //     // this.setState({restaurants: res.data});x\n      // });\n    }; // console.log(\"comments: \"+ typeof comments);\n\n\n    getData();\n  }, [hideLoader, showLoader, comments]);\n  const commentsData = useMemo(() => {\n    let computedComments = comments; // console.log(\"computedComments: \"+ typeof computedComments);\n    //Search comments\n\n    if (search) {\n      // console.log(\"search = \"+search);\n      // computedComments = computedComments.filter(\n      computedComments = comments.filter(comment => comment.tags.toLowerCase().includes(search.toLowerCase()) || comment.name.toLowerCase().includes(search.toLowerCase()) || comment.averageRating.toString().includes(search) || comment.city.toLowerCase().includes(search.toLowerCase()));\n    }\n\n    setTotalItems(computedComments.length); //Sorting comments\n\n    if (sorting.field) {\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\n      computedComments = computedComments.sort((a, b) => reversed * a[sorting.field].localeCompare(b[sorting.field]));\n    } //Current Page slice\n\n\n    return computedComments.slice((currentPage - 1) * ITEMS_PER_PAGE, (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE);\n  }, [comments, currentPage, search, sorting]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Restaurant List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col mb-3 col-12 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              total: totalItems,\n              itemsPerPage: ITEMS_PER_PAGE,\n              currentPage: currentPage,\n              onPageChange: page => setCurrentPage(page)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(AddRestaurantLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            onSearch: value => {\n              setSearch(prevState => value);\n              setCurrentPage(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n            headers: headers,\n            onSorting: (field, order) => setSorting({\n              field,\n              order\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: commentsData.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: comment.name\n              }, comment.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.averageRating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.tags\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: comment.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), hideLoader]\n  }, void 0, true);\n};\n\n_s(DataTable, \"uiRVWfvasRyZ0582CNnzh0wQmWU=\", false, function () {\n  return [useFullPageLoader];\n});\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/damocles/AdminPortal/admin_portal_react/src/reactpagination/RestaurantDataTable.js"],"names":["React","useEffect","useState","useMemo","Header","TableHeader","Pagination","Search","useFullPageLoader","ExternalInfo","AppConfig","RestaurantService","AddRestaurantLink","DataTable","comments","setComments","loader","showLoader","hideLoader","totalItems","setTotalItems","currentPage","setCurrentPage","search","setSearch","sorting","setSorting","field","order","ITEMS_PER_PAGE","headers","name","sortable","getData","getRestaurant","then","res","data","commentsData","computedComments","filter","comment","tags","toLowerCase","includes","averageRating","toString","city","length","reversed","sort","a","b","localeCompare","slice","page","textAlign","value","prevState","map","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Header from \"./Header\";\r\nimport { TableHeader, Pagination, Search } from \"./components/DataTable\";\r\nimport useFullPageLoader from \"./hooks/useFullPageLoader\";\r\nimport ExternalInfo from \"./components/ExternalInfo\";\r\nimport AppConfig from \"./components/hoc/App.config\";\r\nimport RestaurantService from \"../services/RestaurantService\";\r\nimport AddRestaurantLink from \"./AddRestaurantLink\";\r\n// \"@fortawesome/react-fontawesome\": \"^0.1.14\",\r\n\r\nconst DataTable = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\r\n\r\n    const ITEMS_PER_PAGE = 50;\r\n\r\n    const headers = [\r\n        { name: \"Name\", field: \"name\", sortable: true },\r\n        { name: \"Average Rating\", field: \"averageRating\", sortable: false },\r\n        { name: \"Tags\", field: \"tags\", sortable: true },\r\n        { name: \"City\", field: \"city\", sortable: true }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const getData = () => {\r\n            showLoader();\r\n\r\n              // RestaurantService.getRestaurant()\r\n            // fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n/*            fetch(\"http://localhost:8080/restaurant\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    hideLoader();\r\n                    setComments(json);\r\n                });*/\r\n\r\n            RestaurantService.getRestaurant().then(res => res.data)\r\n                .then((data) => {\r\n                    hideLoader();\r\n                    setComments((comments) => data);\r\n                    // console.log(data);\r\n                });\r\n\r\n\r\n\r\n            // RestaurantService.getRestaurant().then((res) =>\r\n            // {\r\n            //     console.log(typeof res.data)\r\n            //     setComments(res.data)\r\n            //     // this.setState({restaurants: res.data});x\r\n            // });\r\n\r\n\r\n\r\n        };\r\n\r\n        // console.log(\"comments: \"+ typeof comments);\r\n\r\n        getData();\r\n    }, [hideLoader, showLoader, comments]);\r\n\r\n    const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        // console.log(\"computedComments: \"+ typeof computedComments);\r\n\r\n\r\n        //Search comments\r\n        if (search) {\r\n            // console.log(\"search = \"+search);\r\n            // computedComments = computedComments.filter(\r\n           computedComments = comments.filter(\r\n                comment =>\r\n                    comment.tags.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.averageRating.toString().includes(search) ||\r\n                    comment.city.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n        //Sorting comments\r\n        if (sorting.field) {\r\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\r\n            computedComments = computedComments.sort(\r\n                (a, b) =>\r\n                    reversed * a[sorting.field].localeCompare(b[sorting.field])\r\n            );\r\n        }\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search, sorting]);\r\n\r\n    return (\r\n        <>\r\n            {/*<Header title=\"Building a data table in react\" />*/}\r\n            <h2 className=\"text-center\">Restaurant List</h2>\r\n            {/*<ExternalInfo page=\"datatable\" />*/}\r\n            <br/>\r\n\r\n            <div className=\"row w-100\">\r\n                <div className=\"col mb-3 col-12 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Pagination\r\n                                total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n\r\n\r\n                            />\r\n                        </div>\r\n{/*                        <div className=\"col-md-6 d-flex flex-row-reverse\">\r\n                            <Search\r\n                                onSearch={value => {\r\n                                    setSearch(prevState => value);\r\n                                    console.log(\"value of value: \" + value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                            />\r\n                        </div>*/}\r\n                    </div>\r\n\r\n                    {/*<div className=\"col-md-6 d-flex flex-row-reverse\">*/}\r\n                    <div style={{textAlign:\"center\"}}>\r\n                        {/*<button className=\"btn btn-primary\" onClick={this.addRestaurant}>Add Restaurant</button>*/}\r\n\r\n                        <AddRestaurantLink/>\r\n\r\n\r\n                        <Search\r\n                            onSearch={value => {\r\n                                setSearch(prevState => value);\r\n                                setCurrentPage(1);\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <table className=\"table table-striped\">\r\n                        <TableHeader\r\n                            headers={headers}\r\n                            onSorting={(field, order) =>\r\n                                setSorting({ field, order })\r\n                            }\r\n                        />\r\n                        <tbody>\r\n                        {commentsData.map(comment => (\r\n                            <tr>\r\n                                <th scope=\"row\" key={comment.id}>\r\n                                    {comment.name}\r\n                                </th>\r\n                                {/*<td>{comment.name}</td>*/}\r\n                                <td>{comment.averageRating}</td>\r\n                                <td>{comment.tags}</td>\r\n                                <td>{comment.city}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {hideLoader}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"]},"metadata":{},"sourceType":"module"}